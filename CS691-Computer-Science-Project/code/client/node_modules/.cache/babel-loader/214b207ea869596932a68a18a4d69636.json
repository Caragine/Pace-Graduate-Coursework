{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Adam\\\\Documents\\\\PACE\\\\Fall 2020 - Semester 4\\\\CS 691 - Computer Science Project I\\\\jobster-master\\\\jobster-master\\\\code\\\\client\\\\src\\\\views\\\\Partner\\\\components\\\\Profile\\\\ProfileComponent.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from \"recompose\";\nimport { connect } from \"react-redux\";\nimport { Avatar, Box, Grid, Card, CardContent, CardHeader, Divider, IconButton, TextField, makeStyles } from '@material-ui/core';\nimport { Formik, ErrorMessage } from 'formik';\nimport axios from \"axios\";\nimport EditIcon from '@material-ui/icons/Edit';\nimport SaveIcon from '@material-ui/icons/Save';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport { asyncPartnerTokenUpdate } from '../../../../actions/authActions';\nimport { PartnerProfileInfoSchema } from '../../../../validation/Validations';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(8)\n  },\n  avatar: {\n    height: 120,\n    width: 120,\n    marginRight: 10\n  }\n}));\n\nconst ProfileComponent = (props, {\n  className,\n  ...rest\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [edit, setEdit] = React.useState(true);\n\n  const onEdit = () => {\n    setEdit(!edit);\n  };\n\n  console.log(\"Props from parent\", props);\n  const user = props.user;\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    enableReinitialize: true,\n    validationSchema: PartnerProfileInfoSchema,\n    initialValues: {\n      p_ID: user.p_ID,\n      p_poc_firstname: user.p_poc_firstname,\n      p_poc_lastname: user.p_poc_lastname,\n      p_email: user.p_email,\n      p_poc_phone: user.p_poc_phone,\n      p_street: user.p_street,\n      p_city: user.p_city,\n      p_state: user.p_state,\n      p_zip: user.p_zip\n    },\n    onSubmit: (values, actions) => {\n      console.log(\"props in submit\", values);\n      axios({\n        method: \"post\",\n        url: \"http://localhost:5000/api/update-p-profile\",\n        data: values\n      }).then(function (response) {\n        //handle success\n        console.log(response);\n\n        if (response.data.success) {\n          props.asyncPartnerTokenUpdate({\n            email: values.p_email\n          }).then(res => {\n            console.log(\"response\", res);\n\n            if (res.error) {\n              console.log(\"error in updating token\", res.error);\n            } else {\n              //history.push('/profile')\n              console.log(\"Updated the token\");\n              setEdit(!edit);\n            }\n          });\n        }\n      }).catch(function (error) {\n        //handle error\n        console.log(error);\n      });\n    },\n    children: ({\n      values,\n      errors,\n      touched,\n      handleChange,\n      handleBlur,\n      handleSubmit,\n      setFieldValue,\n      isSubmitting\n      /* and other goodies */\n\n    }) => /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      onSubmit: handleSubmit,\n      noValidate: true,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: classes.root,\n        ...rest,\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          title: \"Profile\",\n          action: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [edit ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(IconButton, {\n              type: \"submit\",\n              \"aria-label\": \"edit\",\n              children: /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 57\n            }, this), edit ? /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: onEdit,\n              \"aria-label\": \"edit\",\n              children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 49\n            }, this) : /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: onEdit,\n              \"aria-label\": \"edit\",\n              children: /*#__PURE__*/_jsxDEV(ClearIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 57\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            alignItems: \"center\",\n            display: \"flex\",\n            flexDirection: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(Avatar, {\n              className: classes.avatar //src={user.u_profpic}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {\n              orientation: \"vertical\",\n              flexItem: true,\n              variant: \"middle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Box // alignItems=\"left\"\n            , {\n              display: \"flex\",\n              flexDirection: \"column\",\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 3,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 6,\n                  md: 6,\n                  lg: 6,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    error: Boolean(touched.p_poc_firstname && errors.p_poc_firstname),\n                    helperText: touched.p_poc_firstname && errors.p_poc_firstname,\n                    id: \"p_poc_firstname\",\n                    name: \"p_poc_firstname\",\n                    label: \"First Name\",\n                    InputLabelProps: {\n                      shrink: true\n                    },\n                    value: values.p_poc_firstname,\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    disabled: edit,\n                    fullWidth: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 152,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 6,\n                  md: 6,\n                  lg: 6,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    error: Boolean(touched.p_poc_lastname && errors.p_poc_lastname),\n                    helperText: touched.p_poc_lastname && errors.p_poc_lastname,\n                    id: \"p_poc_lastname\",\n                    name: \"p_poc_lastname\",\n                    label: \"Last Name\",\n                    InputLabelProps: {\n                      shrink: true\n                    },\n                    value: values.p_poc_lastname,\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    disabled: edit,\n                    fullWidth: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 170,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 3,\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 12,\n                  lg: 12,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    id: \"p_email\",\n                    name: \"p_email\",\n                    label: \"Email\",\n                    InputLabelProps: {\n                      shrink: true\n                    },\n                    value: values.p_email,\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    disabled: true,\n                    fullWidth: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 190,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 3,\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 12,\n                  lg: 12,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    error: Boolean(touched.p_poc_phone && errors.p_poc_phone),\n                    helperText: touched.p_poc_phone && errors.p_poc_phone,\n                    id: \"p_poc_phone\",\n                    name: \"p_poc_phone\",\n                    label: \"Phone no\",\n                    InputLabelProps: {\n                      shrink: true\n                    },\n                    value: values.p_poc_phone,\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    disabled: edit,\n                    fullWidth: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 3,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 6,\n                  md: 6,\n                  lg: 6,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    error: Boolean(touched.p_street && errors.p_street),\n                    helperText: touched.p_street && errors.p_street,\n                    id: \"p_street\",\n                    name: \"p_street\",\n                    label: \"Street\",\n                    InputLabelProps: {\n                      shrink: true\n                    },\n                    value: values.p_street,\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    disabled: edit,\n                    fullWidth: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 6,\n                  md: 6,\n                  lg: 6,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    error: Boolean(touched.p_city && errors.p_city),\n                    helperText: touched.p_city && errors.p_city,\n                    id: \"p_city\",\n                    name: \"p_city\",\n                    label: \"City\",\n                    InputLabelProps: {\n                      shrink: true\n                    },\n                    value: values.p_city,\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    disabled: edit,\n                    fullWidth: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 246,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 3,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 6,\n                  md: 6,\n                  lg: 6,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    error: Boolean(touched.p_state && errors.p_state),\n                    helperText: touched.p_state && errors.p_state,\n                    id: \"p_state\",\n                    name: \"p_state\",\n                    label: \"State\",\n                    InputLabelProps: {\n                      shrink: true\n                    },\n                    value: values.p_state,\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    disabled: edit,\n                    fullWidth: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 266,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 6,\n                  md: 6,\n                  lg: 6,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    id: \"p_zip\",\n                    error: Boolean(touched.p_zip && errors.p_zip),\n                    helperText: touched.p_zip && errors.p_zip,\n                    name: \"p_zip\",\n                    label: \"Zip\",\n                    InputLabelProps: {\n                      shrink: true\n                    },\n                    value: values.p_zip,\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    disabled: edit,\n                    fullWidth: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 284,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProfileComponent, \"/fx4qagFWEbOtP09eQwZECCFVM0=\", false, function () {\n  return [useStyles];\n});\n\n_c = ProfileComponent;\nProfileComponent.propTypes = {\n  className: PropTypes.string,\n  asyncPartnerTokenUpdate: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    auth: state.auth\n  };\n}\n\nexport default compose(connect(mapStateToProps, {\n  asyncPartnerTokenUpdate\n}, null))(ProfileComponent);\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileComponent\");","map":{"version":3,"sources":["C:/Users/Adam/Documents/PACE/Fall 2020 - Semester 4/CS 691 - Computer Science Project I/jobster-master/jobster-master/code/client/src/views/Partner/components/Profile/ProfileComponent.js"],"names":["React","PropTypes","compose","connect","Avatar","Box","Grid","Card","CardContent","CardHeader","Divider","IconButton","TextField","makeStyles","Formik","ErrorMessage","axios","EditIcon","SaveIcon","ClearIcon","asyncPartnerTokenUpdate","PartnerProfileInfoSchema","useStyles","theme","root","marginTop","spacing","avatar","height","width","marginRight","ProfileComponent","props","className","rest","classes","edit","setEdit","useState","onEdit","console","log","user","p_ID","p_poc_firstname","p_poc_lastname","p_email","p_poc_phone","p_street","p_city","p_state","p_zip","values","actions","method","url","data","then","response","success","email","res","error","catch","errors","touched","handleChange","handleBlur","handleSubmit","setFieldValue","isSubmitting","form","Boolean","shrink","propTypes","string","func","isRequired","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from \"recompose\";\nimport { connect } from \"react-redux\";\nimport {\n    Avatar,\n    Box,\n    Grid,\n    Card,\n    CardContent,\n    CardHeader,\n    Divider,\n    IconButton,\n    TextField,\n    makeStyles\n} from '@material-ui/core';\nimport { Formik, ErrorMessage } from 'formik';\nimport axios from \"axios\";\nimport EditIcon from '@material-ui/icons/Edit';\nimport SaveIcon from '@material-ui/icons/Save';\nimport ClearIcon from '@material-ui/icons/Clear';\n\nimport { asyncPartnerTokenUpdate } from '../../../../actions/authActions';\n\nimport { PartnerProfileInfoSchema } from '../../../../validation/Validations';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        marginTop: theme.spacing(8)\n    },\n    avatar: {\n        height: 120,\n        width: 120,\n        marginRight: 10\n    }\n}));\n\nconst ProfileComponent = (props, { className, ...rest }) => {\n    const classes = useStyles();\n\n    const [edit, setEdit] = React.useState(true);\n\n    const onEdit = () => {\n        setEdit(!edit)\n    }\n\n\n    console.log(\"Props from parent\", props)\n\n    const user = props.user\n\n    return (\n        <Formik\n            enableReinitialize\n            validationSchema={PartnerProfileInfoSchema}\n            initialValues={{\n                p_ID: user.p_ID,\n                p_poc_firstname: user.p_poc_firstname,\n                p_poc_lastname: user.p_poc_lastname,\n                p_email: user.p_email,\n                p_poc_phone: user.p_poc_phone,\n                p_street: user.p_street,\n                p_city: user.p_city,\n                p_state: user.p_state,\n                p_zip: user.p_zip\n            }}\n            onSubmit={(values, actions) => {\n                console.log(\"props in submit\", values)\n\n                axios({\n                    method: \"post\",\n                    url: \"http://localhost:5000/api/update-p-profile\",\n                    data: values,\n                })\n                    .then(function (response) {\n                        //handle success\n                        console.log(response);\n                        if (response.data.success) {\n                            props.asyncPartnerTokenUpdate({ email: values.p_email })\n                                .then(res => {\n                                    console.log(\"response\", res);\n                                    if (res.error) {\n                                        console.log(\"error in updating token\", res.error)\n                                    }\n                                    else {\n                                        //history.push('/profile')\n                                        console.log(\"Updated the token\")\n                                        setEdit(!edit)\n                                    }\n                                })\n                        }\n\n                    })\n                    .catch(function (error) {\n                        //handle error\n                        console.log(error);\n                    });\n\n            }}\n        >\n            {({\n                values,\n                errors,\n                touched,\n                handleChange,\n                handleBlur,\n                handleSubmit,\n                setFieldValue,\n                isSubmitting,\n                /* and other goodies */\n            }) => (\n                    <form className={classes.form} onSubmit={handleSubmit} noValidate>\n                        <Card\n                            className={classes.root}\n                            {...rest}\n                        >\n                            <CardHeader\n                                title=\"Profile\"\n                                action={\n                                    <>\n                                        {edit ? <></> : <IconButton type=\"submit\" aria-label=\"edit\">\n                                            <SaveIcon />\n                                        </IconButton>}\n                                        {edit ? <IconButton onClick={onEdit} aria-label=\"edit\">\n                                            <EditIcon />\n                                        </IconButton> : <IconButton onClick={onEdit} aria-label=\"edit\">\n                                                <ClearIcon />\n                                            </IconButton>}\n                                    </>\n                                }\n                            />\n                            <Divider />\n                            <CardContent>\n                                <Box\n                                    alignItems=\"center\"\n                                    display=\"flex\"\n                                    flexDirection=\"row\"\n                                >\n                                    <Avatar\n                                        className={classes.avatar}\n                                    //src={user.u_profpic}\n                                    />\n                                    <Divider orientation=\"vertical\" flexItem variant=\"middle\" />\n                                    <Box\n                                        // alignItems=\"left\"\n                                        display=\"flex\"\n                                        flexDirection=\"column\"\n                                    >\n                                        <Grid container spacing={3}>\n                                            <Grid item xs={6} md={6} lg={6} >\n                                                {/* Name */}\n                                                <TextField\n                                                    error={Boolean(touched.p_poc_firstname && errors.p_poc_firstname)}\n                                                    helperText={touched.p_poc_firstname && errors.p_poc_firstname}\n                                                    id=\"p_poc_firstname\"\n                                                    name=\"p_poc_firstname\"\n                                                    label=\"First Name\"\n                                                    InputLabelProps={{\n                                                        shrink: true,\n                                                    }}\n                                                    value={values.p_poc_firstname}\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    disabled={edit}\n                                                    fullWidth={true}\n                                                />\n                                            </Grid>\n                                            <Grid item xs={6} md={6} lg={6} >\n                                                {/* Name */}\n                                                <TextField\n                                                    error={Boolean(touched.p_poc_lastname && errors.p_poc_lastname)}\n                                                    helperText={touched.p_poc_lastname && errors.p_poc_lastname}\n                                                    id=\"p_poc_lastname\"\n                                                    name=\"p_poc_lastname\"\n                                                    label=\"Last Name\"\n                                                    InputLabelProps={{\n                                                        shrink: true,\n                                                    }}\n                                                    value={values.p_poc_lastname}\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    disabled={edit}\n                                                    fullWidth={true}\n                                                />\n                                            </Grid>\n                                        </Grid>\n                                        <Grid container spacing={3}>\n                                            <Grid item xs={12} md={12} lg={12} >\n                                                {/* Name */}\n                                                <TextField\n                                                    id=\"p_email\"\n                                                    name=\"p_email\"\n                                                    label=\"Email\"\n                                                    InputLabelProps={{\n                                                        shrink: true,\n                                                    }}\n                                                    value={values.p_email}\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    disabled={true}\n                                                    fullWidth={true}\n                                                />\n                                            </Grid>\n                                        </Grid>\n                                        <Grid container spacing={3}>\n                                            <Grid item xs={12} md={12} lg={12} >\n                                                {/* Name */}\n                                                <TextField\n                                                    error={Boolean(touched.p_poc_phone && errors.p_poc_phone)}\n                                                    helperText={touched.p_poc_phone && errors.p_poc_phone}\n                                                    id=\"p_poc_phone\"\n                                                    name=\"p_poc_phone\"\n                                                    label=\"Phone no\"\n                                                    InputLabelProps={{\n                                                        shrink: true,\n                                                    }}\n                                                    value={values.p_poc_phone}\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    disabled={edit}\n                                                    fullWidth={true}\n                                                />\n                                            </Grid>\n                                        </Grid>\n                                        <Grid container spacing={3}>\n                                            <Grid item xs={6} md={6} lg={6} >\n                                                {/* Name */}\n                                                <TextField\n                                                    error={Boolean(touched.p_street && errors.p_street)}\n                                                    helperText={touched.p_street && errors.p_street}\n                                                    id=\"p_street\"\n                                                    name=\"p_street\"\n                                                    label=\"Street\"\n                                                    InputLabelProps={{\n                                                        shrink: true,\n                                                    }}\n                                                    value={values.p_street}\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    disabled={edit}\n                                                    fullWidth={true}\n                                                />\n                                            </Grid>\n                                            <Grid item xs={6} md={6} lg={6} >\n                                                {/* Name */}\n                                                <TextField\n                                                    error={Boolean(touched.p_city && errors.p_city)}\n                                                    helperText={touched.p_city && errors.p_city}\n                                                    id=\"p_city\"\n                                                    name=\"p_city\"\n                                                    label=\"City\"\n                                                    InputLabelProps={{\n                                                        shrink: true,\n                                                    }}\n                                                    value={values.p_city}\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    disabled={edit}\n                                                    fullWidth={true}\n                                                />\n                                            </Grid>\n                                        </Grid>\n                                        <Grid container spacing={3}>\n                                            <Grid item xs={6} md={6} lg={6} >\n                                                {/* Name */}\n                                                <TextField\n                                                    error={Boolean(touched.p_state && errors.p_state)}\n                                                    helperText={touched.p_state && errors.p_state}\n                                                    id=\"p_state\"\n                                                    name=\"p_state\"\n                                                    label=\"State\"\n                                                    InputLabelProps={{\n                                                        shrink: true,\n                                                    }}\n                                                    value={values.p_state}\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    disabled={edit}\n                                                    fullWidth={true}\n                                                />\n                                            </Grid>\n                                            <Grid item xs={6} md={6} lg={6} >\n                                                {/* Name */}\n                                                <TextField\n                                                    id=\"p_zip\"\n                                                    error={Boolean(touched.p_zip && errors.p_zip)}\n                                                    helperText={touched.p_zip && errors.p_zip}\n                                                    name=\"p_zip\"\n                                                    label=\"Zip\"\n                                                    InputLabelProps={{\n                                                        shrink: true,\n                                                    }}\n                                                    value={values.p_zip}\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    disabled={edit}\n                                                    fullWidth={true}\n                                                />\n                                            </Grid>\n                                        </Grid>\n                                    </Box>\n                                </Box>\n                            </CardContent>\n                            <Divider />\n                        </Card>\n                    </form>\n                )}\n        </Formik>\n    );\n};\n\nProfileComponent.propTypes = {\n    className: PropTypes.string,\n    asyncPartnerTokenUpdate: PropTypes.func.isRequired\n};\n\n\nfunction mapStateToProps(state) {\n    return {\n        auth: state.auth,\n    }\n}\n\nexport default compose(connect(mapStateToProps, { asyncPartnerTokenUpdate }, null))(ProfileComponent);\n"]},"metadata":{},"sourceType":"module"}