{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Adam\\\\Documents\\\\PACE\\\\Fall 2020 - Semester 4\\\\CS 691 - Computer Science Project I\\\\jobster-master\\\\jobster-master\\\\code\\\\client\\\\src\\\\views\\\\Helpdesk\\\\Contact\\\\pages\\\\Employees\\\\EmployeeForm.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Grid } from '@material-ui/core';\nimport Controls from \"../../components/controls/Controls\";\nimport { useForm, Form } from '../../components/useForm';\nimport * as employeeService from \"../../services/employeeService\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nconst initialFValues = {\n  id: 0,\n  fullName: '',\n  message: '',\n  email: '',\n  mobile: '',\n  city: '',\n  gender: 'male',\n  departmentId: '',\n  hireDate: new Date(),\n  isPermanent: false\n};\n\nfunction Alert(props) {\n  return /*#__PURE__*/_jsxDEV(MuiAlert, {\n    elevation: 6,\n    variant: \"filled\",\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 12\n  }, this);\n}\n\n_c = Alert;\nexport default function EmployeeForm() {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const validate = (fieldValues = values) => {\n    let temp = { ...errors\n    };\n    if ('fullName' in fieldValues) temp.fullName = fieldValues.fullName ? \"\" : \"This field is required.\";\n    if ('email' in fieldValues) temp.email = /$^|.+@.+..+/.test(fieldValues.email) ? \"\" : \"Email is not valid.\";\n    if ('mobile' in fieldValues) temp.mobile = fieldValues.mobile.length > 9 ? \"\" : \"Minimum 10 numbers required.\";\n    if ('departmentId' in fieldValues) temp.departmentId = fieldValues.departmentId.length !== 0 ? \"\" : \"This field is required.\";\n    setErrors({ ...temp\n    });\n    if (fieldValues === values) return Object.values(temp).every(x => x === \"\");\n  };\n\n  const {\n    values,\n    errors,\n    setErrors,\n    handleInputChange,\n    resetForm\n  } = useForm(initialFValues, true, validate);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (validate()) {\n      employeeService.insertEmployee(values);\n      resetForm();\n      setOpen(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: [/*#__PURE__*/_jsxDEV(Controls.Input, {\n            name: \"fullName\",\n            label: \"Full Name\",\n            value: values.fullName,\n            onChange: handleInputChange,\n            error: errors.fullName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n            label: \"Email\",\n            name: \"email\",\n            value: values.email,\n            onChange: handleInputChange,\n            error: errors.fullName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n            label: \"City\",\n            name: \"city\",\n            value: values.city,\n            error: errors.fullName,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: [/*#__PURE__*/_jsxDEV(Controls.Input, {\n            label: \"Mobile\",\n            name: \"mobile\",\n            value: values.mobile,\n            onChange: handleInputChange,\n            error: errors.mobile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Controls.Select, {\n            name: \"departmentId\",\n            label: \"Department\",\n            value: values.departmentId,\n            onChange: handleInputChange,\n            options: employeeService.getDepartmentCollection(),\n            error: errors.departmentId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n            name: \"message\",\n            label: \"Type your message\",\n            value: values.message,\n            onChange: handleInputChange,\n            error: errors.fullName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Controls.Button, {\n              type: \"submit\",\n              text: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Controls.Button, {\n              text: \"Reset\",\n              color: \"default\",\n              onClick: resetForm\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: open,\n      autoHideDuration: 6000,\n      onClose: handleClose,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleClose,\n        severity: \"success\",\n        children: \"Sent your message!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(EmployeeForm, \"/rUpdurpq7Uah9u24UgXKpPj8MM=\", false, function () {\n  return [useForm];\n});\n\n_c2 = EmployeeForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Alert\");\n$RefreshReg$(_c2, \"EmployeeForm\");","map":{"version":3,"sources":["C:/Users/Adam/Documents/PACE/Fall 2020 - Semester 4/CS 691 - Computer Science Project I/jobster-master/jobster-master/code/client/src/views/Helpdesk/Contact/pages/Employees/EmployeeForm.js"],"names":["React","Grid","Controls","useForm","Form","employeeService","Snackbar","MuiAlert","initialFValues","id","fullName","message","email","mobile","city","gender","departmentId","hireDate","Date","isPermanent","Alert","props","EmployeeForm","open","setOpen","useState","handleClose","event","reason","validate","fieldValues","values","temp","errors","test","length","setErrors","Object","every","x","handleInputChange","resetForm","handleSubmit","e","preventDefault","insertEmployee","getDepartmentCollection"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Grid, } from '@material-ui/core';\nimport Controls from \"../../components/controls/Controls\";\nimport { useForm, Form } from '../../components/useForm';\nimport * as employeeService from \"../../services/employeeService\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\n\nconst initialFValues = {\n    id: 0,\n    fullName: '',\n    message: '',\n    email: '',\n    mobile: '',\n    city: '',\n    gender: 'male',\n    departmentId: '',\n    hireDate: new Date(),\n    isPermanent: false,\n}\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default function EmployeeForm() {\n\n    const [open, setOpen] = React.useState(false);\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setOpen(false);\n    };\n\n    const validate = (fieldValues = values) => {\n        let temp = { ...errors }\n        if ('fullName' in fieldValues)\n            temp.fullName = fieldValues.fullName ? \"\" : \"This field is required.\"\n        if ('email' in fieldValues)\n            temp.email = (/$^|.+@.+..+/).test(fieldValues.email) ? \"\" : \"Email is not valid.\"\n        if ('mobile' in fieldValues)\n            temp.mobile = fieldValues.mobile.length > 9 ? \"\" : \"Minimum 10 numbers required.\"\n        if ('departmentId' in fieldValues)\n            temp.departmentId = fieldValues.departmentId.length !== 0 ? \"\" : \"This field is required.\"\n        setErrors({\n            ...temp\n        })\n\n        if (fieldValues === values)\n            return Object.values(temp).every(x => x === \"\")\n    }\n\n    const {\n        values,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm\n    } = useForm(initialFValues, true, validate);\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        if (validate()) {\n            employeeService.insertEmployee(values)\n            resetForm()\n            setOpen(true);\n        }\n    }\n\n    return (\n        <>\n            <Form onSubmit={handleSubmit}>\n                <Grid container>\n                    <Grid item xs={6}>\n                        <Controls.Input\n                            name=\"fullName\"\n                            label=\"Full Name\"\n                            value={values.fullName}\n                            onChange={handleInputChange}\n                            error={errors.fullName}\n                        />\n                        <Controls.Input\n                            label=\"Email\"\n                            name=\"email\"\n                            value={values.email}\n                            onChange={handleInputChange}\n                            error={errors.fullName}\n                        />\n\n                        <Controls.Input\n                            label=\"City\"\n                            name=\"city\"\n                            value={values.city}\n                            error={errors.fullName}\n                            onChange={handleInputChange}\n                        />\n\n                    </Grid>\n                    <Grid item xs={6}>\n\n                        <Controls.Input\n                            label=\"Mobile\"\n                            name=\"mobile\"\n                            value={values.mobile}\n                            onChange={handleInputChange}\n                            error={errors.mobile}\n                        />\n\n                        <Controls.Select\n                            name=\"departmentId\"\n                            label=\"Department\"\n                            value={values.departmentId}\n                            onChange={handleInputChange}\n                            options={employeeService.getDepartmentCollection()}\n                            error={errors.departmentId}\n                        />\n\n                        <Controls.Input\n                            name=\"message\"\n                            label=\"Type your message\"\n                            value={values.message}\n                            onChange={handleInputChange}\n                            error={errors.fullName}\n                        />\n\n                        <div>\n                            <Controls.Button\n                                type=\"submit\"\n                                text=\"Submit\" />\n                            <Controls.Button\n                                text=\"Reset\"\n                                color=\"default\"\n                                onClick={resetForm} />\n                        </div>\n                    </Grid>\n                </Grid>\n            </Form>\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n                <Alert onClose={handleClose} severity=\"success\">\n                    Sent your message!\n        </Alert>\n            </Snackbar>\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}