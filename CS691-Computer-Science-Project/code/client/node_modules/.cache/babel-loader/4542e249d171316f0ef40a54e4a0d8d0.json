{"ast":null,"code":"import * as Yup from 'yup';\nexport const LoginSchema = Yup.object().shape({\n  email: Yup.string().email('Invalid email').required('Required'),\n  password: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required('Required')\n});\nexport const UserSignupSchema = [Yup.object().shape({\n  email: Yup.string().email('Invalid email').required('Required'),\n  password: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required('Required'),\n  c_password: Yup.string().oneOf([Yup.ref('password'), null], 'Passwords must match'),\n  phone: Yup.number().required('Required').typeError(\"It should be a number\")\n}), Yup.object().shape({\n  firstName: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required('Required'),\n  lastName: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required('Required'),\n  dob: Yup.string().nullable().required(`Required`),\n  city: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required('Required'),\n  street: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required('Required'),\n  country: Yup.string().nullable().required(`Required`),\n  zip: Yup.number().required('Required').typeError(\"It should be a number\")\n})];\nexport const PartnerLoginSchema = Yup.object().shape({\n  email: Yup.string().email('Invalid email').required('Required'),\n  password: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required('Required')\n});\nexport const PartnerSignupSchema = Yup.object().shape({\n  email: Yup.string().email('Invalid email').required('Required'),\n  password: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required('Required'),\n  c_password: Yup.string().oneOf([Yup.ref('password'), null], 'Passwords must match'),\n  firstName: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required('Required'),\n  lastName: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required('Required'),\n  phone: Yup.string().nullable().required(`Required`),\n  city: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required('Required'),\n  street: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required('Required'),\n  country: Yup.string().nullable().required(`Required`),\n  zip: Yup.number().required('Required').typeError(\"It should be a number\"),\n  company: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required('Required'),\n  state: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required('Required')\n});\nexport const SearchBarSchema = Yup.object().shape({\n  sterm: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required('Required'),\n  sloc: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required('Required')\n});\nexport const ProfileFormSchema = Yup.object().shape({\n  u_undergrad: Yup.string().min(0, 'Too Short!').max(35, 'Too Long!'),\n  u_undergrad_gpa: Yup.number().typeError(\"It should be a number\"),\n  u_grad: Yup.string().min(0, 'Too Short!').max(35, 'Too Long!'),\n  u_grad_gpa: Yup.number().typeError(\"It should be a number\")\n});\nexport const ProfileEditSchema = Yup.object().shape({\n  u_grad_gpa: Yup.number().typeError(\"It should be a number\"),\n  u_ug_gpa: Yup.number().typeError(\"It should be a number\")\n});\nexport const ProfileInfoSchema = Yup.object().shape({\n  u_phone: Yup.number().required(`Required`).typeError(\"It should be a number\"),\n  u_zip: Yup.number().required(`Required`).typeError(\"It should be a number\")\n});\nexport const PartnerProfileInfoSchema = Yup.object().shape({\n  p_poc_firstname: Yup.string().max(100).required('First Name is required'),\n  p_poc_lastname: Yup.string().max(100).required('Last Name is required'),\n  p_email: Yup.string().email('Invalid email').required('Email is required'),\n  p_street: Yup.string().max(100).required('Street is required'),\n  p_city: Yup.string().max(100).required('City is required'),\n  p_state: Yup.string().max(100).required('State is required'),\n  p_poc_phone: Yup.number().required(`Required`).typeError(\"It should be a number\"),\n  p_zip: Yup.number().required(`Required`).typeError(\"It should be a number\")\n});\nexport const PartnerCompanyInfoSchema = Yup.object().shape({\n  c_name: Yup.string().max(30).required('Company Name is required'),\n  c_website: Yup.string().matches(/((https?):\\/\\/)?(www.)?[a-z0-9]+(\\.[a-z]{2,}){1,3}(#?\\/?[a-zA-Z0-9#]+)*\\/?(\\?[a-zA-Z0-9-_]+=[a-zA-Z0-9-%]+&?)?$/, 'Enter correct url!').required('Website url is required'),\n  c_industry: Yup.string().max(100).required('Company Industry is required'),\n  c_size: Yup.string().max(255).required('Company Total Number of Employees is required'),\n  c_headquarters: Yup.string().max(100).required('Headquater Location is required'),\n  c_revenue: Yup.string().max(100).required('Company Revenue is required'),\n  c_founded: Yup.string().max(100).required('Company Foundation Year is required'),\n  c_specialities: Yup.string().max(100).required('Company Specialties is required')\n});","map":{"version":3,"sources":["C:/Users/Adam/Documents/PACE/Fall 2020 - Semester 4/CS 691 - Computer Science Project I/jobster-master/jobster-master/code/client/src/validation/Validations.js"],"names":["Yup","LoginSchema","object","shape","email","string","required","password","min","max","UserSignupSchema","c_password","oneOf","ref","phone","number","typeError","firstName","lastName","dob","nullable","city","street","country","zip","PartnerLoginSchema","PartnerSignupSchema","company","state","SearchBarSchema","sterm","sloc","ProfileFormSchema","u_undergrad","u_undergrad_gpa","u_grad","u_grad_gpa","ProfileEditSchema","u_ug_gpa","ProfileInfoSchema","u_phone","u_zip","PartnerProfileInfoSchema","p_poc_firstname","p_poc_lastname","p_email","p_street","p_city","p_state","p_poc_phone","p_zip","PartnerCompanyInfoSchema","c_name","c_website","matches","c_industry","c_size","c_headquarters","c_revenue","c_founded","c_specialities"],"mappings":"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","sourcesContent":["import * as Yup from 'yup';\n\nexport const LoginSchema = Yup.object().shape({\n    email: Yup.string()\n        .email('Invalid email')\n        .required('Required'),\n    password: Yup.string()\n        .min(2, 'Too Short!')\n        .max(50, 'Too Long!')\n        .required('Required'),\n\n});\n\nexport const UserSignupSchema = [\n    Yup.object().shape({\n        email: Yup.string()\n            .email('Invalid email')\n            .required('Required'),\n        password: Yup.string()\n            .min(2, 'Too Short!')\n            .max(50, 'Too Long!')\n            .required('Required'),\n        c_password: Yup.string()\n            .oneOf([Yup.ref('password'), null], 'Passwords must match'),\n        phone: Yup.number()\n            .required('Required')\n            .typeError(\"It should be a number\")\n    }),\n    Yup.object().shape({\n        firstName: Yup.string()\n            .min(2, 'Too Short!')\n            .max(50, 'Too Long!')\n            .required('Required'),\n        lastName: Yup.string()\n            .min(2, 'Too Short!')\n            .max(50, 'Too Long!')\n            .required('Required'),\n        dob: Yup.string()\n            .nullable()\n            .required(`Required`),\n        city: Yup.string()\n            .min(2, 'Too Short!')\n            .max(50, 'Too Long!')\n            .required('Required'),\n        street: Yup.string()\n            .min(2, 'Too Short!')\n            .max(50, 'Too Long!')\n            .required('Required'),\n        country: Yup.string()\n            .nullable()\n            .required(`Required`),\n        zip: Yup.number()\n            .required('Required')\n            .typeError(\"It should be a number\"),\n    })]\n\n\nexport const PartnerLoginSchema = Yup.object().shape({\n    email: Yup.string()\n        .email('Invalid email')\n        .required('Required'),\n    password: Yup.string()\n        .min(2, 'Too Short!')\n        .max(50, 'Too Long!')\n        .required('Required'),\n});\n\n\nexport const PartnerSignupSchema =\n    Yup.object().shape({\n        email: Yup.string()\n            .email('Invalid email')\n            .required('Required'),\n        password: Yup.string()\n            .min(2, 'Too Short!')\n            .max(50, 'Too Long!')\n            .required('Required'),\n        c_password: Yup.string()\n            .oneOf([Yup.ref('password'), null], 'Passwords must match'),\n\n        firstName: Yup.string()\n            .min(2, 'Too Short!')\n            .max(50, 'Too Long!')\n            .required('Required'),\n        lastName: Yup.string()\n            .min(2, 'Too Short!')\n            .max(50, 'Too Long!')\n            .required('Required'),\n        phone: Yup.string()\n            .nullable()\n            .required(`Required`),\n        city: Yup.string()\n            .min(2, 'Too Short!')\n            .max(50, 'Too Long!')\n            .required('Required'),\n        street: Yup.string()\n            .min(2, 'Too Short!')\n            .max(50, 'Too Long!')\n            .required('Required'),\n        country: Yup.string()\n            .nullable()\n            .required(`Required`),\n        zip: Yup.number()\n            .required('Required')\n            .typeError(\"It should be a number\"),\n        company: Yup.string()\n            .min(2, 'Too Short!')\n            .max(50, 'Too Long!')\n            .required('Required'),\n        state: Yup.string()\n            .min(2, 'Too Short!')\n            .max(50, 'Too Long!')\n            .required('Required'),\n    })\n\n\nexport const SearchBarSchema = Yup.object().shape({\n    sterm: Yup.string()\n        .min(2, 'Too Short!')\n        .max(50, 'Too Long!')\n        .required('Required'),\n    sloc: Yup.string()\n        .min(2, 'Too Short!')\n        .max(50, 'Too Long!')\n        .required('Required'),\n});\n\nexport const ProfileFormSchema = Yup.object().shape({\n    u_undergrad: Yup.string()\n        .min(0, 'Too Short!')\n        .max(35, 'Too Long!'),\n    u_undergrad_gpa: Yup.number()\n        .typeError(\"It should be a number\"),\n    u_grad: Yup.string()\n        .min(0, 'Too Short!')\n        .max(35, 'Too Long!'),\n    u_grad_gpa: Yup.number()\n        .typeError(\"It should be a number\"),\n\n})\n\nexport const ProfileEditSchema = Yup.object().shape({\n    u_grad_gpa: Yup.number()\n        .typeError(\"It should be a number\"),\n    u_ug_gpa: Yup.number()\n        .typeError(\"It should be a number\"),\n})\n\nexport const ProfileInfoSchema = Yup.object().shape({\n    u_phone: Yup.number()\n        .required(`Required`)\n        .typeError(\"It should be a number\"),\n    u_zip: Yup.number()\n        .required(`Required`)\n        .typeError(\"It should be a number\")\n})\n\nexport const PartnerProfileInfoSchema = Yup.object().shape({\n    p_poc_firstname: Yup.string().max(100).required('First Name is required'),\n    p_poc_lastname: Yup.string().max(100).required('Last Name is required'),\n    p_email: Yup.string().email('Invalid email').required('Email is required'),\n    p_street: Yup.string().max(100).required('Street is required'),\n    p_city: Yup.string().max(100).required('City is required'),\n    p_state: Yup.string().max(100).required('State is required'),\n    p_poc_phone: Yup.number()\n        .required(`Required`)\n        .typeError(\"It should be a number\"),\n    p_zip: Yup.number()\n        .required(`Required`)\n        .typeError(\"It should be a number\")\n})\n\nexport const PartnerCompanyInfoSchema = Yup.object().shape({\n    c_name: Yup.string().max(30).required('Company Name is required'),\n    c_website: Yup.string().matches(\n        /((https?):\\/\\/)?(www.)?[a-z0-9]+(\\.[a-z]{2,}){1,3}(#?\\/?[a-zA-Z0-9#]+)*\\/?(\\?[a-zA-Z0-9-_]+=[a-zA-Z0-9-%]+&?)?$/,\n        'Enter correct url!'\n    )\n        .required('Website url is required'),\n    c_industry: Yup.string().max(100).required('Company Industry is required'),\n    c_size: Yup.string().max(255).required('Company Total Number of Employees is required'),\n    c_headquarters: Yup.string().max(100).required('Headquater Location is required'),\n    c_revenue: Yup.string().max(100).required('Company Revenue is required'),\n    c_founded: Yup.string().max(100).required('Company Foundation Year is required'),\n    c_specialities: Yup.string().max(100).required('Company Specialties is required'),\n})"]},"metadata":{},"sourceType":"module"}