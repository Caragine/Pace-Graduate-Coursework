{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Adam\\\\Documents\\\\PACE\\\\Fall 2020 - Semester 4\\\\CS 691 - Computer Science Project I\\\\jobster-master\\\\jobster-master\\\\code\\\\client\\\\src\\\\views\\\\Home\\\\components\\\\Profile\\\\ProfileForm.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from \"recompose\";\nimport { connect } from \"react-redux\";\nimport { Avatar, Grid, Card, CardContent, Divider, CardHeader, makeStyles, Box, Button, IconButton, TextField, FormLabel, FormControl } from '@material-ui/core';\nimport { Formik, ErrorMessage } from 'formik';\nimport axios from \"axios\";\nimport { useHistory } from 'react-router-dom';\nimport { ProfileFormSchema } from '../../../../validation/Validations';\nimport { asyncTokenUpdate } from '../../../../actions/authActions';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(8)\n  },\n  avatar: {\n    height: 120,\n    width: 120,\n    marginRight: 10\n  },\n  input: {\n    display: 'none'\n  }\n}));\n\nconst ProfileForm = (props, { ...rest\n}) => {\n  _s();\n\n  const history = useHistory();\n  console.log(\"PRops\", props);\n  const id = props.id;\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.root,\n    ...rest,\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      title: \"Profile not Created!\",\n      subheader: \"Let's create Profile\" // action={\n      //     <>\n      //         {edit ? <></> : <IconButton onClick={onSave} aria-label=\"edit\">\n      //             <SaveIcon />\n      //         </IconButton>}\n      //         {edit ? <IconButton onClick={onEdit} aria-label=\"edit\">\n      //             <EditIcon />\n      //         </IconButton> : <IconButton onClick={onEdit} aria-label=\"edit\">\n      //                 <ClearIcon />\n      //             </IconButton>}\n      //     </>\n      // }\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        enableReinitialize: true,\n        validationSchema: ProfileFormSchema,\n        initialValues: {\n          u_ID: id,\n          u_profpic: null,\n          u_resume: null,\n          u_profpic_preview: null,\n          u_undergrad: \"\",\n          u_undergrad_gpa: \"\",\n          u_grad: \"\",\n          u_grad_gpa: \"\",\n          u_major: \"\",\n          u_concentration: \"\"\n        },\n        onSubmit: (values, actions) => {\n          console.log(\"props\", values);\n          const {\n            u_ID,\n            u_profpic,\n            u_resume,\n            u_undergrad,\n            u_undergrad_gpa,\n            u_grad,\n            u_grad_gpa,\n            u_major,\n            u_concentration\n          } = values;\n          var formData = new FormData();\n          formData.append(\"u_ID\", u_ID);\n          formData.append(\"u_profpic\", u_profpic);\n          formData.append(\"u_resume\", u_resume);\n          formData.append(\"u_undergrad\", u_undergrad);\n          formData.append(\"u_undergrad_gpa\", u_undergrad_gpa);\n          formData.append(\"u_grad\", u_grad);\n          formData.append(\"u_grad_gpa\", u_grad_gpa);\n          formData.append(\"u_major\", u_major);\n          formData.append(\"u_concentration\", u_concentration);\n\n          for (var key of formData.entries()) {\n            console.log(key[0] + ', ' + key[1]);\n          }\n\n          axios({\n            method: \"post\",\n            url: \"http://localhost:5000/api/create-profile\",\n            data: formData,\n            headers: {\n              \"Content-Type\": \"multipart/form-data\"\n            }\n          }).then(function (response) {\n            //handle success\n            console.log(response);\n\n            if (response.data.status) {\n              props.asyncTokenUpdate(props.auth.user).then(res => {\n                console.log(\"response\", res);\n\n                if (res.error) {\n                  console.log(\"error in updating token\", res.error);\n                } else {\n                  history.go(0);\n                }\n              });\n            }\n          }).catch(function (error) {\n            //handle error\n            console.log(error);\n          });\n        },\n        children: ({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          setFieldValue,\n          isSubmitting\n          /* and other goodies */\n\n        }) => /*#__PURE__*/_jsxDEV(Box, {\n          alignItems: \"center\" //display=\"flex\"\n          ,\n          flexDirection: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            className: classes.form,\n            onSubmit: handleSubmit,\n            noValidate: true,\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              alignItems: \"center\" //display=\"flex\"\n              ,\n              flexDirection: \"column\",\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                justify: \"center\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  name: \"u_profpic\",\n                  accept: \"image/*\",\n                  className: classes.input,\n                  id: \"u_profpic\",\n                  type: \"file\",\n                  onChange: event => {\n                    console.log(\"event\", event);\n                    setFieldValue(\"u_profpic\", event.currentTarget.files[0]);\n                    setFieldValue(\"u_profpic_preview\", URL.createObjectURL(event.currentTarget.files[0]));\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"u_profpic\",\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    component: \"span\",\n                    children: /*#__PURE__*/_jsxDEV(Avatar, {\n                      className: classes.avatar,\n                      src: values.u_profpic_preview\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 187,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 186,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                  orientation: \"vertical\",\n                  flexItem: true,\n                  variant: \"middle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                  component: \"fieldset\",\n                  children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                    component: \"legend\",\n                    children: \"Upload Resume\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 49\n                  }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"file\",\n                    name: \"u_resume\",\n                    id: \"u_resume\",\n                    onChange: event => {\n                      console.log(\"event\", event);\n                      setFieldValue(\"u_resume\", event.target.files[0]);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 197,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Box // alignItems=\"left\"\n            //display=\"flex\"\n            , {\n              flexDirection: \"column\",\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 3,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 6,\n                  md: 6,\n                  lg: 6,\n                  children: [/*#__PURE__*/_jsxDEV(TextField //variant=\"outlined\"\n                  , {\n                    id: \"u_undergrad\",\n                    label: \"Undergraduate\",\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    value: values.u_undergrad,\n                    fullWidth: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 219,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                    name: \"u_undergrad\",\n                    render: msg => /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        color: '#fc2403'\n                      },\n                      children: msg\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 228,\n                      columnNumber: 97\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 6,\n                  md: 6,\n                  lg: 6,\n                  children: [/*#__PURE__*/_jsxDEV(TextField //variant=\"outlined\"\n                  , {\n                    id: \"u_undergrad_gpa\",\n                    label: \"Undergraduate GPA\",\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    value: values.u_undergrad_gpa,\n                    fullWidth: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 232,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                    name: \"u_undergrad_gpa\",\n                    render: msg => /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        color: '#fc2403'\n                      },\n                      children: msg\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 241,\n                      columnNumber: 101\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 3,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 6,\n                  md: 6,\n                  lg: 6,\n                  children: [/*#__PURE__*/_jsxDEV(TextField //variant=\"outlined\"\n                  , {\n                    id: \"u_grad\",\n                    label: \"Graduate\",\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    value: values.u_grad,\n                    fullWidth: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 247,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                    name: \"u_grad\",\n                    render: msg => /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        color: '#fc2403'\n                      },\n                      children: msg\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 256,\n                      columnNumber: 92\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 256,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 6,\n                  md: 6,\n                  lg: 6,\n                  children: [/*#__PURE__*/_jsxDEV(TextField //variant=\"outlined\"\n                  , {\n                    id: \"u_grad_gpa\",\n                    label: \"Graduate GPA\",\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    value: values.u_grad_gpa,\n                    fullWidth: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                    name: \"u_grad_gpa\",\n                    render: msg => /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        color: '#fc2403'\n                      },\n                      children: msg\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 269,\n                      columnNumber: 96\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 269,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(TextField //variant=\"outlined\"\n              , {\n                id: \"u_major\",\n                label: \"Major\",\n                onChange: handleChange,\n                onBlur: handleBlur,\n                value: values.u_major,\n                fullWidth: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"u_major\",\n                render: msg => /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    color: '#fc2403'\n                  },\n                  children: msg\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 85\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(TextField //variant=\"outlined\"\n              , {\n                id: \"u_concentration\",\n                label: \"Concentration\",\n                onChange: handleChange,\n                onBlur: handleBlur,\n                value: values.u_concentration,\n                fullWidth: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"u_concentration\",\n                render: msg => /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    color: '#fc2403'\n                  },\n                  children: msg\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 93\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                fullWidth: true,\n                variant: \"contained\",\n                color: \"primary\",\n                className: classes.submit,\n                children: \"Create\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProfileForm, \"BdTvy0NwxfXtm2+rVFU+2ByCBYw=\", false, function () {\n  return [useHistory, useStyles];\n});\n\n_c = ProfileForm;\nProfileForm.propTypes = {\n  className: PropTypes.string,\n  asyncTokenUpdate: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    auth: state.auth\n  };\n}\n\nexport default compose(connect(mapStateToProps, {\n  asyncTokenUpdate\n}, null))(ProfileForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileForm\");","map":{"version":3,"sources":["C:/Users/Adam/Documents/PACE/Fall 2020 - Semester 4/CS 691 - Computer Science Project I/jobster-master/jobster-master/code/client/src/views/Home/components/Profile/ProfileForm.js"],"names":["React","PropTypes","compose","connect","Avatar","Grid","Card","CardContent","Divider","CardHeader","makeStyles","Box","Button","IconButton","TextField","FormLabel","FormControl","Formik","ErrorMessage","axios","useHistory","ProfileFormSchema","asyncTokenUpdate","useStyles","theme","root","marginTop","spacing","avatar","height","width","marginRight","input","display","ProfileForm","props","rest","history","console","log","id","classes","u_ID","u_profpic","u_resume","u_profpic_preview","u_undergrad","u_undergrad_gpa","u_grad","u_grad_gpa","u_major","u_concentration","values","actions","formData","FormData","append","key","entries","method","url","data","headers","then","response","status","auth","user","res","error","go","catch","errors","touched","handleChange","handleBlur","handleSubmit","setFieldValue","isSubmitting","form","event","currentTarget","files","URL","createObjectURL","target","msg","color","submit","propTypes","className","string","func","isRequired","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from \"recompose\";\nimport { connect } from \"react-redux\";\nimport {\n    Avatar,\n    Grid,\n    Card,\n    CardContent,\n    Divider,\n    CardHeader,\n    makeStyles,\n    Box,\n    Button,\n    IconButton,\n    TextField,\n    FormLabel,\n    FormControl\n} from '@material-ui/core';\nimport { Formik, ErrorMessage } from 'formik';\nimport axios from \"axios\";\nimport { useHistory } from 'react-router-dom';\n\nimport { ProfileFormSchema } from '../../../../validation/Validations';\nimport { asyncTokenUpdate } from '../../../../actions/authActions';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        marginTop: theme.spacing(8)\n    },\n    avatar: {\n        height: 120,\n        width: 120,\n        marginRight: 10\n    },\n    input: {\n        display: 'none'\n    }\n}));\n\nconst ProfileForm = (props, { ...rest }) => {\n\n    const history = useHistory();\n    console.log(\"PRops\", props)\n    const id = props.id;\n\n    const classes = useStyles();\n\n\n    return (\n        <Card\n            className={classes.root}\n            {...rest}\n        >\n            <CardHeader\n                title=\"Profile not Created!\"\n                subheader=\"Let's create Profile\"\n            // action={\n            //     <>\n            //         {edit ? <></> : <IconButton onClick={onSave} aria-label=\"edit\">\n            //             <SaveIcon />\n            //         </IconButton>}\n            //         {edit ? <IconButton onClick={onEdit} aria-label=\"edit\">\n            //             <EditIcon />\n            //         </IconButton> : <IconButton onClick={onEdit} aria-label=\"edit\">\n            //                 <ClearIcon />\n            //             </IconButton>}\n\n            //     </>\n            // }\n            />\n            <Divider />\n            <CardContent>\n\n                <Formik\n                    enableReinitialize\n                    validationSchema={ProfileFormSchema}\n                    initialValues={{\n                        u_ID: id,\n                        u_profpic: null,\n                        u_resume: null,\n                        u_profpic_preview: null,\n                        u_undergrad: \"\",\n                        u_undergrad_gpa: \"\",\n                        u_grad: \"\",\n                        u_grad_gpa: \"\",\n                        u_major: \"\",\n                        u_concentration: \"\"\n                    }}\n                    onSubmit={(values, actions) => {\n                        console.log(\"props\", values)\n                        const {\n                            u_ID,\n                            u_profpic,\n                            u_resume,\n                            u_undergrad,\n                            u_undergrad_gpa,\n                            u_grad,\n                            u_grad_gpa,\n                            u_major,\n                            u_concentration\n                        } = values;\n\n                        var formData = new FormData();\n                        formData.append(\"u_ID\", u_ID);\n                        formData.append(\"u_profpic\", u_profpic);\n                        formData.append(\"u_resume\", u_resume);\n                        formData.append(\"u_undergrad\", u_undergrad);\n                        formData.append(\"u_undergrad_gpa\", u_undergrad_gpa);\n                        formData.append(\"u_grad\", u_grad);\n                        formData.append(\"u_grad_gpa\", u_grad_gpa);\n                        formData.append(\"u_major\", u_major);\n                        formData.append(\"u_concentration\", u_concentration);\n                        for (var key of formData.entries()) {\n                            console.log(key[0] + ', ' + key[1]);\n                        }\n\n                        axios({\n                            method: \"post\",\n                            url: \"http://localhost:5000/api/create-profile\",\n                            data: formData,\n                            headers: { \"Content-Type\": \"multipart/form-data\" },\n                        })\n                            .then(function (response) {\n                                //handle success\n                                console.log(response);\n                                if (response.data.status) {\n                                    props.asyncTokenUpdate(props.auth.user)\n                                        .then(res => {\n                                            console.log(\"response\", res);\n                                            if (res.error) {\n                                                console.log(\"error in updating token\", res.error)\n                                            }\n                                            else {\n                                                history.go(0)\n                                            }\n                                        })\n\n                                }\n                            })\n                            .catch(function (error) {\n                                //handle error\n                                console.log(error);\n                            });\n\n                    }}\n                >\n                    {({\n                        values,\n                        errors,\n                        touched,\n                        handleChange,\n                        handleBlur,\n                        handleSubmit,\n                        setFieldValue,\n                        isSubmitting,\n                        /* and other goodies */\n                    }) => (\n                            <Box\n                                alignItems=\"center\"\n                                //display=\"flex\"\n                                flexDirection=\"row\"\n                            >\n                                <form className={classes.form} onSubmit={handleSubmit} noValidate>\n                                    <Box\n                                        alignItems=\"center\"\n                                        //display=\"flex\"\n                                        flexDirection=\"column\"\n                                    >\n                                        <Grid container justify=\"center\">\n                                            <input\n                                                name=\"u_profpic\"\n                                                accept=\"image/*\"\n                                                className={classes.input}\n                                                id=\"u_profpic\"\n                                                type=\"file\"\n                                                onChange={(event) => {\n                                                    console.log(\"event\", event)\n                                                    setFieldValue(\"u_profpic\", event.currentTarget.files[0]);\n                                                    setFieldValue(\"u_profpic_preview\", URL.createObjectURL(event.currentTarget.files[0]));\n                                                }}\n                                            />\n                                            <label htmlFor=\"u_profpic\">\n                                                <IconButton component='span'>\n                                                    <Avatar\n                                                        className={classes.avatar}\n                                                        src={values.u_profpic_preview}\n                                                    />\n                                                </IconButton>\n                                            </label>\n                                            <Divider orientation=\"vertical\" flexItem variant=\"middle\" />\n                                            <FormControl component=\"fieldset\">\n                                                <FormLabel component=\"legend\">Upload Resume</FormLabel>\n                                                &nbsp;\n                                                <input\n                                                    type=\"file\"\n                                                    name=\"u_resume\"\n                                                    id=\"u_resume\"\n                                                    onChange={(event) => {\n                                                        console.log(\"event\", event)\n                                                        setFieldValue(\"u_resume\", event.target.files[0]);\n                                                    }}\n                                                />\n                                            </FormControl>\n\n                                        </Grid>\n\n                                    </Box>\n                                    <Box\n                                        // alignItems=\"left\"\n                                        //display=\"flex\"\n                                        flexDirection=\"column\"\n                                    >\n                                        <Grid container spacing={3}>\n                                            <Grid item xs={6} md={6} lg={6} >\n                                                {/* undergrad */}\n                                                <TextField\n                                                    //variant=\"outlined\"\n                                                    id=\"u_undergrad\"\n                                                    label=\"Undergraduate\"\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    value={values.u_undergrad}\n                                                    fullWidth={true}\n                                                />\n                                                <ErrorMessage name=\"u_undergrad\" render={msg => <div style={{ color: '#fc2403' }}>{msg}</div>} />\n                                            </Grid>\n                                            <Grid item xs={6} md={6} lg={6} >\n                                                {/* undergrad_gpa */}\n                                                <TextField\n                                                    //variant=\"outlined\"\n                                                    id=\"u_undergrad_gpa\"\n                                                    label=\"Undergraduate GPA\"\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    value={values.u_undergrad_gpa}\n                                                    fullWidth={true}\n                                                />\n                                                <ErrorMessage name=\"u_undergrad_gpa\" render={msg => <div style={{ color: '#fc2403' }}>{msg}</div>} />\n                                            </Grid>\n                                        </Grid>\n                                        <Grid container spacing={3}>\n                                            <Grid item xs={6} md={6} lg={6} >\n                                                {/* undergrad */}\n                                                <TextField\n                                                    //variant=\"outlined\"\n                                                    id=\"u_grad\"\n                                                    label=\"Graduate\"\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    value={values.u_grad}\n                                                    fullWidth={true}\n                                                />\n                                                <ErrorMessage name=\"u_grad\" render={msg => <div style={{ color: '#fc2403' }}>{msg}</div>} />\n                                            </Grid>\n                                            <Grid item xs={6} md={6} lg={6} >\n                                                {/* undergrad_gpa */}\n                                                <TextField\n                                                    //variant=\"outlined\"\n                                                    id=\"u_grad_gpa\"\n                                                    label=\"Graduate GPA\"\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    value={values.u_grad_gpa}\n                                                    fullWidth={true}\n                                                />\n                                                <ErrorMessage name=\"u_grad_gpa\" render={msg => <div style={{ color: '#fc2403' }}>{msg}</div>} />\n                                            </Grid>\n                                        </Grid>\n                                        {/* u_major */}\n                                        <TextField\n                                            //variant=\"outlined\"\n                                            id=\"u_major\"\n                                            label=\"Major\"\n                                            onChange={handleChange}\n                                            onBlur={handleBlur}\n                                            value={values.u_major}\n                                            fullWidth={true}\n                                        />\n                                        <ErrorMessage name=\"u_major\" render={msg => <div style={{ color: '#fc2403' }}>{msg}</div>} />\n                                        {/*u_concentration*/}\n                                        <TextField\n                                            //variant=\"outlined\"\n                                            id=\"u_concentration\"\n                                            label=\"Concentration\"\n                                            onChange={handleChange}\n                                            onBlur={handleBlur}\n                                            value={values.u_concentration}\n                                            fullWidth={true}\n                                        />\n                                        <ErrorMessage name=\"u_concentration\" render={msg => <div style={{ color: '#fc2403' }}>{msg}</div>} />\n                                        <Button\n                                            type=\"submit\"\n                                            fullWidth\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            className={classes.submit}\n                                        >\n                                            Create\n                                </Button>\n                                    </Box>\n                                </form>\n                            </Box>\n                        )}\n                </Formik>\n\n            </CardContent>\n            <Divider />\n        </Card >\n    );\n};\n\nProfileForm.propTypes = {\n    className: PropTypes.string,\n    asyncTokenUpdate: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n    return {\n        auth: state.auth,\n    }\n}\n\nexport default compose(connect(mapStateToProps, { asyncTokenUpdate }, null))(ProfileForm);\n"]},"metadata":{},"sourceType":"module"}