{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Adam\\\\Documents\\\\PACE\\\\Fall 2020 - Semester 4\\\\CS 691 - Computer Science Project I\\\\jobster-master\\\\jobster-master\\\\code\\\\client\\\\src\\\\views\\\\Home\\\\SortFilter.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport uniqBy from \"lodash/uniqBy\";\nimport SortIcon from '@material-ui/icons/Sort';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nconst useStyles = makeStyles(theme => ({\n  toolbar: {\n    padding: '5px'\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  }\n}));\n\nconst SortFilter = props => {\n  _s();\n\n  const classes = useStyles();\n  const data = props.data;\n  const [open, setOpen] = React.useState(false);\n  const [company, setCompany] = React.useState('');\n  const [jobtype, setJobType] = React.useState('');\n\n  const handleChange = event => {\n    setCompany(event.target.value || '');\n  };\n\n  const handleJobChange = event => {\n    setJobType(event.target.value || '');\n  };\n\n  const handleReset = () => {\n    setCompany('');\n    setJobType('');\n    props.filterHandler(data);\n    setOpen(false);\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const filter = () => {\n    var filtered = [];\n    data.filter(function (el) {\n      if (el.p_companyname === company || el.j_type === jobtype) filtered.push(el);\n      return filtered;\n    });\n    props.filterHandler(filtered);\n    console.log(\"Filtered data\", filtered);\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.toolbar,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        size: \"small\",\n        startIcon: /*#__PURE__*/_jsxDEV(SortIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 32\n        }, this),\n        endIcon: /*#__PURE__*/_jsxDEV(ArrowDownwardIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 30\n        }, this),\n        onClick: handleClickOpen,\n        children: \"Filter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Filter your search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: classes.container,\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            className: classes.formControl,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              shrink: true,\n              id: \"demo-simple-select-placeholder-label-label\",\n              children: \"Companies\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"demo-dialog-select-label\",\n              id: \"demo-dialog-select\",\n              value: company,\n              onChange: handleChange,\n              input: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 40\n              }, this),\n              children: uniqBy(data, 'p_companyname').map((x, i) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: x.p_companyname,\n                children: x.p_companyname\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            className: classes.formControl,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              shrink: true,\n              id: \"demo-simple-select-placeholder-label-label\",\n              children: \"Job types\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"demo-dialog-select-label\",\n              id: \"demo-dialog-select\",\n              value: jobtype,\n              onChange: handleJobChange,\n              input: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 40\n              }, this),\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'full-time',\n                children: \"Full-time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'part-time',\n                children: \"Part-time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'internship',\n                children: \"Internship\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleReset,\n          disabled: company === '' && jobtype === '' ? true : false,\n          size: \"small\",\n          color: \"primary\",\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          disabled: company === '' && jobtype === '' ? true : false,\n          size: \"small\",\n          onClick: filter,\n          color: \"primary\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SortFilter, \"84vFj/AAYEhV+DM98J1aNYhXhqc=\", false, function () {\n  return [useStyles];\n});\n\n_c = SortFilter;\nexport default SortFilter;\n\nvar _c;\n\n$RefreshReg$(_c, \"SortFilter\");","map":{"version":3,"sources":["C:/Users/Adam/Documents/PACE/Fall 2020 - Semester 4/CS 691 - Computer Science Project I/jobster-master/jobster-master/code/client/src/views/Home/SortFilter.js"],"names":["React","makeStyles","Paper","Button","Dialog","DialogActions","DialogContent","DialogTitle","InputLabel","Input","MenuItem","FormControl","Select","uniqBy","SortIcon","ArrowDownwardIcon","useStyles","theme","toolbar","padding","container","display","flexWrap","formControl","margin","spacing","minWidth","SortFilter","props","classes","data","open","setOpen","useState","company","setCompany","jobtype","setJobType","handleChange","event","target","value","handleJobChange","handleReset","filterHandler","handleClickOpen","handleClose","filter","filtered","el","p_companyname","j_type","push","console","log","map","x","i"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\n\nimport Button from '@material-ui/core/Button';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\n\nimport uniqBy from \"lodash/uniqBy\";\n\n\n\nimport SortIcon from '@material-ui/icons/Sort';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\n\n\nconst useStyles = makeStyles((theme) => ({\n    toolbar: {\n        padding: '5px'\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n\n}));\n\n\nconst SortFilter = (props) => {\n\n    const classes = useStyles();\n\n    const data = props.data\n\n\n    const [open, setOpen] = React.useState(false);\n    const [company, setCompany] = React.useState('');\n    const [jobtype, setJobType] = React.useState('');\n\n    const handleChange = (event) => {\n        setCompany((event.target.value) || '');\n\n    };\n\n    const handleJobChange = (event) => {\n        setJobType((event.target.value) || '');\n    };\n\n    const handleReset = () => {\n        setCompany('')\n        setJobType('')\n        props.filterHandler(data);\n        setOpen(false);\n    }\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n\n    };\n\n    const filter = () => {\n        var filtered = [];\n        data.filter(function (el) {\n            if (el.p_companyname === company || el.j_type === jobtype) filtered.push(el)\n            return filtered;\n        });\n        props.filterHandler(filtered);\n        console.log(\"Filtered data\", filtered)\n        setOpen(false);\n    }\n\n\n\n    return (\n        <>\n            <Paper className={classes.toolbar}>\n                <Button color=\"primary\"\n                    size=\"small\"\n                    startIcon={<SortIcon />}\n                    endIcon={<ArrowDownwardIcon />}\n                    onClick={handleClickOpen}\n                >Filter</Button>\n            </Paper>\n            <Dialog open={open} onClose={handleClose}>\n                <DialogTitle>Filter your search</DialogTitle>\n                <DialogContent>\n                    <form className={classes.container}>\n                        <FormControl className={classes.formControl}>\n                            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\n                                Companies\n                            </InputLabel>\n                            <Select\n                                labelId=\"demo-dialog-select-label\"\n                                id=\"demo-dialog-select\"\n                                value={company}\n                                onChange={handleChange}\n                                input={<Input />}\n                            >\n\n                                {\n                                    uniqBy(data, 'p_companyname').map((x, i) => (\n                                        <MenuItem key={i} value={x.p_companyname}>{x.p_companyname}</MenuItem>\n                                    ))}\n                            </Select>\n                        </FormControl>\n                        <FormControl className={classes.formControl}>\n                            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\n                                Job types\n                            </InputLabel>\n                            <Select\n                                labelId=\"demo-dialog-select-label\"\n                                id=\"demo-dialog-select\"\n                                value={jobtype}\n                                onChange={handleJobChange}\n                                input={<Input />}\n                            >\n                                <MenuItem value={'full-time'}>Full-time</MenuItem>\n                                <MenuItem value={'part-time'}>Part-time</MenuItem>\n                                <MenuItem value={'internship'}>Internship</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </form>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleReset} disabled={company === '' && jobtype === '' ? true : false} size=\"small\" color=\"primary\">\n                        Reset\n                    </Button>\n                    <Button variant=\"outlined\" disabled={company === '' && jobtype === '' ? true : false} size=\"small\" onClick={filter} color=\"primary\">\n                        Submit\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    )\n\n\n\n}\n\n\nexport default SortFilter;"]},"metadata":{},"sourceType":"module"}