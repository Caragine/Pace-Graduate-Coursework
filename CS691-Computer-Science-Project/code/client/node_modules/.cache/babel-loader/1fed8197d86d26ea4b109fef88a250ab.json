{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Adam\\\\Documents\\\\PACE\\\\Fall 2020 - Semester 4\\\\CS 691 - Computer Science Project I\\\\jobster-master\\\\jobster-master\\\\code\\\\client\\\\src\\\\views\\\\Home\\\\components\\\\Signup\\\\Forms\\\\Fields\\\\DatePickerField.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useField } from 'formik';\nimport Grid from '@material-ui/core/Grid';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nexport default function DatePickerField(props) {\n  _s();\n\n  const [field, meta, helper] = useField(props);\n  const {\n    touched,\n    error\n  } = meta;\n  const {\n    setValue\n  } = helper;\n  const isError = touched && error && true;\n  const {\n    value\n  } = field;\n  const [selectedDate, setSelectedDate] = useState(null);\n  useEffect(() => {\n    if (value) {\n      const date = new Date(value);\n      setSelectedDate(date);\n    }\n  }, [value]);\n\n  function _onChange(date) {\n    if (date) {\n      setSelectedDate(date);\n\n      try {\n        const ISODateString = date.toISOString();\n        setValue(ISODateString);\n      } catch (error) {\n        setValue(date);\n      }\n    } else {\n      setValue(date);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    children: /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n      utils: DateFnsUtils,\n      children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, { ...field,\n        ...props,\n        value: selectedDate,\n        onChange: _onChange,\n        error: isError,\n        invalidDateMessage: isError && error,\n        helperText: isError && error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DatePickerField, \"dPmEhMxmBgI3uQjsuvSJ6+dQ+MA=\", false, function () {\n  return [useField];\n});\n\n_c = DatePickerField;\n\nvar _c;\n\n$RefreshReg$(_c, \"DatePickerField\");","map":{"version":3,"sources":["C:/Users/Adam/Documents/PACE/Fall 2020 - Semester 4/CS 691 - Computer Science Project I/jobster-master/jobster-master/code/client/src/views/Home/components/Signup/Forms/Fields/DatePickerField.js"],"names":["React","useState","useEffect","useField","Grid","MuiPickersUtilsProvider","KeyboardDatePicker","DateFnsUtils","DatePickerField","props","field","meta","helper","touched","error","setValue","isError","value","selectedDate","setSelectedDate","date","Date","_onChange","ISODateString","toISOString"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SACIC,uBADJ,EAEIC,kBAFJ,QAGO,sBAHP;AAIA,OAAOC,YAAP,MAAyB,mBAAzB;AAEA,eAAe,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAC3C,QAAM,CAACC,KAAD,EAAQC,IAAR,EAAcC,MAAd,IAAwBT,QAAQ,CAACM,KAAD,CAAtC;AACA,QAAM;AAAEI,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAqBH,IAA3B;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAeH,MAArB;AACA,QAAMI,OAAO,GAAGH,OAAO,IAAIC,KAAX,IAAoB,IAApC;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAYP,KAAlB;AACA,QAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkClB,QAAQ,CAAC,IAAD,CAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIe,KAAJ,EAAW;AACP,YAAMG,IAAI,GAAG,IAAIC,IAAJ,CAASJ,KAAT,CAAb;AACAE,MAAAA,eAAe,CAACC,IAAD,CAAf;AACH;AACJ,GALQ,EAKN,CAACH,KAAD,CALM,CAAT;;AAOA,WAASK,SAAT,CAAmBF,IAAnB,EAAyB;AACrB,QAAIA,IAAJ,EAAU;AACND,MAAAA,eAAe,CAACC,IAAD,CAAf;;AACA,UAAI;AACA,cAAMG,aAAa,GAAGH,IAAI,CAACI,WAAL,EAAtB;AACAT,QAAAA,QAAQ,CAACQ,aAAD,CAAR;AACH,OAHD,CAGE,OAAOT,KAAP,EAAc;AACZC,QAAAA,QAAQ,CAACK,IAAD,CAAR;AACH;AACJ,KARD,MAQO;AACHL,MAAAA,QAAQ,CAACK,IAAD,CAAR;AACH;AACJ;;AAED,sBACI,QAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAA,2BACI,QAAC,uBAAD;AAAyB,MAAA,KAAK,EAAEb,YAAhC;AAAA,6BACI,QAAC,kBAAD,OACQG,KADR;AAAA,WAEQD,KAFR;AAGI,QAAA,KAAK,EAAES,YAHX;AAII,QAAA,QAAQ,EAAEI,SAJd;AAKI,QAAA,KAAK,EAAEN,OALX;AAMI,QAAA,kBAAkB,EAAEA,OAAO,IAAIF,KANnC;AAOI,QAAA,UAAU,EAAEE,OAAO,IAAIF;AAP3B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GA5CuBN,e;UACUL,Q;;;KADVK,e","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useField } from 'formik';\nimport Grid from '@material-ui/core/Grid';\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDatePicker\n} from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\n\nexport default function DatePickerField(props) {\n    const [field, meta, helper] = useField(props);\n    const { touched, error } = meta;\n    const { setValue } = helper;\n    const isError = touched && error && true;\n    const { value } = field;\n    const [selectedDate, setSelectedDate] = useState(null);\n\n    useEffect(() => {\n        if (value) {\n            const date = new Date(value);\n            setSelectedDate(date);\n        }\n    }, [value]);\n\n    function _onChange(date) {\n        if (date) {\n            setSelectedDate(date);\n            try {\n                const ISODateString = date.toISOString();\n                setValue(ISODateString);\n            } catch (error) {\n                setValue(date);\n            }\n        } else {\n            setValue(date);\n        }\n    }\n\n    return (\n        <Grid container>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDatePicker\n                    {...field}\n                    {...props}\n                    value={selectedDate}\n                    onChange={_onChange}\n                    error={isError}\n                    invalidDateMessage={isError && error}\n                    helperText={isError && error}\n                />\n            </MuiPickersUtilsProvider>\n        </Grid>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}