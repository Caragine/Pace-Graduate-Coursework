{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Adam\\\\Documents\\\\PACE\\\\Fall 2020 - Semester 4\\\\CS 691 - Computer Science Project I\\\\jobster-master\\\\jobster-master\\\\code\\\\client\\\\src\\\\views\\\\Home\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Formik, ErrorMessage } from 'formik'; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField'; // components\n\nimport { LoginSchema } from \"../../../../validation/Validations\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport styles from \"assets/jss/material-kit-react/views/loginPage.js\"; // @material-ui/icons\n\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\nimport { compose } from \"recompose\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { asyncLogin } from \"../../../../actions/authActions\";\nconst useStyles = makeStyles(styles);\n\nfunction Login(props) {\n  _s();\n\n  const classes = useStyles();\n  const [visible, setVisible] = React.useState({\n    showPassword: false\n  });\n\n  const handleClickShowPassword = () => {\n    setVisible({ ...visible,\n      showPassword: !visible.showPassword\n    });\n  };\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        email: '',\n        password: ''\n      },\n      validationSchema: LoginSchema,\n      onSubmit: (values, actions) => {\n        console.log(\"props\", values);\n        props.asyncLogin(values).then(res => {\n          actions.setErrors(res);\n          actions.setSubmitting(false);\n          console.log(\"response\", res);\n\n          if (res.error) {\n            console.log(\"error in login\", res.error);\n          }\n        });\n      },\n      children: ({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting\n        /* and other goodies */\n\n      }) => /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.form,\n        onSubmit: handleSubmit,\n        noValidate: true,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          variant: \"outlined\",\n          required: true,\n          fullWidth: true,\n          id: \"email\",\n          label: \"Email Address\",\n          name: \"email\",\n          autoComplete: \"email\",\n          autoFocus: true,\n          onChange: handleChange,\n          onBlur: handleBlur,\n          value: values.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"email\",\n          render: msg => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: '#fc2403'\n            },\n            children: msg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 71\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          variant: \"outlined\",\n          required: true,\n          fullWidth: true,\n          name: \"password\",\n          label: \"Password\",\n          type: visible.showPassword ? 'text' : 'password',\n          id: \"password\",\n          onChange: handleChange,\n          onBlur: handleBlur,\n          value: values.password,\n          autoComplete: \"new-password\",\n          InputProps: {\n            endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"end\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                \"aria-label\": \"toggle password visibility\",\n                onClick: handleClickShowPassword,\n                onMouseDown: handleMouseDownPassword,\n                children: visible.showPassword ? /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 73\n                }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 90\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 41\n            }, this)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"password\",\n          render: msg => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: '#fc2403'\n            },\n            children: msg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 74\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          style: {\n            background: '#2867B2'\n          },\n          size: \"lg\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"ychH0WrA81mg8yLjYWFg6/PGKtI=\", false, function () {\n  return [useStyles];\n});\n\n_c = Login;\nLogin.propTypes = {\n  asyncLogin: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    auth: state.auth\n  };\n}\n\nexport default compose(connect(mapStateToProps, {\n  asyncLogin\n}, null))(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Adam/Documents/PACE/Fall 2020 - Semester 4/CS 691 - Computer Science Project I/jobster-master/jobster-master/code/client/src/views/Home/components/Login/Login.js"],"names":["React","Formik","ErrorMessage","makeStyles","InputAdornment","IconButton","TextField","LoginSchema","Button","styles","Visibility","VisibilityOff","compose","connect","PropTypes","asyncLogin","useStyles","Login","props","classes","visible","setVisible","useState","showPassword","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","email","password","values","actions","console","log","then","res","setErrors","setSubmitting","error","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","form","msg","color","endAdornment","background","propTypes","func","isRequired","auth","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Formik, ErrorMessage } from 'formik';\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\n\n// components\nimport { LoginSchema } from \"../../../../validation/Validations\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport styles from \"assets/jss/material-kit-react/views/loginPage.js\";\n\n// @material-ui/icons\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\n\nimport { compose } from \"recompose\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { asyncLogin } from \"../../../../actions/authActions\";\n\nconst useStyles = makeStyles(styles);\n\nfunction Login(props) {\n    const classes = useStyles();\n\n    const [visible, setVisible] = React.useState({\n        showPassword: false,\n    });\n\n    const handleClickShowPassword = () => {\n        setVisible({ ...visible, showPassword: !visible.showPassword });\n    };\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    return (\n        <div>\n            <Formik\n                initialValues={{ email: '', password: '' }}\n                validationSchema={LoginSchema}\n                onSubmit={(values, actions) => {\n                    console.log(\"props\", values)\n\n                    props.asyncLogin(values)\n                        .then(res => {\n                            actions.setErrors(res);\n                            actions.setSubmitting(false);\n                            console.log(\"response\", res);\n                            if (res.error) {\n                                console.log(\"error in login\", res.error)\n                            }\n                        })\n                }}\n            >\n                {({\n                    values,\n                    errors,\n                    touched,\n                    handleChange,\n                    handleBlur,\n                    handleSubmit,\n                    isSubmitting,\n                    /* and other goodies */\n                }) => (\n                        <form className={classes.form} onSubmit={handleSubmit} noValidate>\n                            <TextField\n                                margin=\"normal\"\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"email\"\n                                label=\"Email Address\"\n                                name=\"email\"\n                                autoComplete=\"email\"\n                                autoFocus\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                value={values.email}\n                            />\n                            <ErrorMessage name=\"email\" render={msg => <div style={{ color: '#fc2403' }}>{msg}</div>} />\n                            <TextField\n                                margin=\"normal\"\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                name=\"password\"\n                                label=\"Password\"\n                                type={visible.showPassword ? 'text' : 'password'}\n                                id=\"password\"\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                value={values.password}\n                                autoComplete=\"new-password\"\n                                InputProps={{\n                                    endAdornment:\n                                        <InputAdornment position=\"end\">\n                                            <IconButton\n                                                aria-label=\"toggle password visibility\"\n                                                onClick={handleClickShowPassword}\n                                                onMouseDown={handleMouseDownPassword}\n                                            >\n                                                {visible.showPassword ? <Visibility /> : <VisibilityOff />}\n                                            </IconButton>\n                                        </InputAdornment>\n\n                                }}\n                            />\n                            <ErrorMessage name=\"password\" render={msg => <div style={{ color: '#fc2403' }}>{msg}</div>} />\n                            <Button type=\"submit\" style={{ background: '#2867B2' }}\n                                size=\"lg\">Login</Button>\n                        </form>\n                    )}\n            </Formik>\n        </div >\n    );\n}\n\nLogin.propTypes = {\n    asyncLogin: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired\n};\n\n\nfunction mapStateToProps(state) {\n    return {\n        auth: state.auth,\n    }\n}\n\nexport default compose(connect(mapStateToProps, { asyncLogin }, null))(Login);\n"]},"metadata":{},"sourceType":"module"}