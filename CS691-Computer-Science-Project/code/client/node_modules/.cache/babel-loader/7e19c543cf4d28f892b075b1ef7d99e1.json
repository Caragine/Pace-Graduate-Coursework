{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Adam\\\\Documents\\\\PACE\\\\Fall 2020 - Semester 4\\\\CS 691 - Computer Science Project I\\\\jobster-master\\\\jobster-master\\\\code\\\\client\\\\src\\\\views\\\\Partner\\\\components\\\\Account\\\\AccountPayment.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles, CssBaseline, createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { compose } from \"recompose\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { setCurrentPartner, asyncPartnerTokenUpdate } from 'actions/authActions';\nimport setAuthToken from \"../../../../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport store from \"../../../../store\";\nimport { useHistory } from 'react-router-dom';\nimport Header from '../Header';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport axios from 'axios';\nimport { Grid, Card, CardContent, Container, Box, Snackbar, TextField, Divider, Button, Typography, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#2867B2\"\n    },\n    background: {\n      default: \"#f4f5fd\"\n    }\n  }\n});\nconst useStyles = makeStyles({\n  appMain: {\n    width: '100%',\n    marginTop: '100px',\n    minHeight: '100%'\n  },\n  icon: {\n    height: 100,\n    width: 100,\n    justifyContent: \"center\"\n  },\n  Container: {\n    marginTop: '50px',\n    Directions: 'row',\n    marginLeft: '10%',\n    marginRight: '10%',\n    flexDirection: \"row\",\n    textAlign: 'center'\n  },\n  appMain: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    marginTop: '75px'\n  }\n});\n\nfunction Alert(props) {\n  return /*#__PURE__*/_jsxDEV(MuiAlert, {\n    elevation: 6,\n    variant: \"filled\",\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 10\n  }, this);\n}\n\n_c = Alert;\n\nfunction AccountPayment(props) {\n  _s();\n\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [msg, setMsg] = React.useState(false);\n  let type = props.location.state.plan;\n  let tax = 8.875 / 100 * parseInt(type);\n  let total = parseInt(type) + tax;\n\n  const handleMsg = () => {\n    setMsg(true);\n  };\n\n  const handleCloseMsg = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setMsg(false);\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const pay = () => {\n    console.log(\"Paying\");\n  };\n\n  const history = useHistory();\n\n  const nav1 = () => history.push('/jobinfo');\n\n  React.useEffect(() => {\n    // Check for token\n    if (localStorage.pt_jwtToken) {\n      // Set auth token header auth\n      console.log(\"in effect\", localStorage.pt_jwtToken);\n      setAuthToken(localStorage.pt_jwtToken); // Decode token and get user info and exp\n\n      const decoded = jwt_decode(localStorage.pt_jwtToken);\n      console.log(\"in effect decoded\", decoded); // Set user and isAuthenticated\n\n      store.dispatch(setCurrentPartner(decoded)); // Check for expired token\n\n      const currentTime = Date.now() / 1000;\n\n      if (decoded.exp < currentTime) {\n        //console.log(\"App.js is running inside if and if\")\n        // Logout user\n        //store.dispatch(logoutUser());\n        // TODO: Clear current Profile\n        console.log(\"Session Expired\"); // Redirect to login\n        // window.location.href = \"/login\";\n      }\n    } else {\n      history.replace('/partner');\n    }\n  }, [localStorage.pt_jwtToken]);\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: classes.appMain,\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          maxWidth: \"sm\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textPrimary\",\n            variant: \"h4\",\n            children: [\"You have Selected:  \", type === '200' ? `Plan 1` : type === '600' ? `Plan 2` : `Plan 3`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textPrimary\",\n            variant: \"body1\",\n            children: \"Continue To your payment.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          name: '',\n          date: '',\n          securityCode: '',\n          cno: ''\n        },\n        validationSchema: Yup.object().shape({\n          name: Yup.string().max(50).required(' Full name is required'),\n          date: Yup.string().max(10000).required(' Date is required'),\n          securityCode: Yup.string().matches(/^[0-9]+$/, \"Must be only numbers\").min(3, \"Invalid code\").max(4, \"Invalid code\").typeError(\"It should be a number\").required(' Security Code is required'),\n          cno: Yup.string().matches(/^[0-9]+$/, \"Must be only numbers\").min(16, \"Invalid card details\").max(16, \"Invalid card details\").required('Card Number is required')\n        }),\n        onSubmit: (values, actions) => {\n          values.type = type;\n          values.id = props.auth.user.id; //handleClickOpen(values);\n\n          console.log(\"values\", values);\n          axios.post('http://localhost:5000/api/payment', values).then(response => {\n            if (response.data.success) {\n              props.asyncPartnerTokenUpdate({\n                email: props.auth.user.email\n              }).then(res => {\n                console.log(\"response\", res);\n\n                if (res.error) {\n                  console.log(\"error in updating token\", res.error);\n                } else {\n                  handleMsg();\n                  setTimeout(() => {\n                    history.replace('/p-account');\n                  }, 3000);\n                  console.log(\"Updated the token\");\n                }\n              });\n            }\n          }).catch(error => {\n            console.log(error);\n          });\n        },\n        children: ({\n          errors,\n          handleBlur,\n          handleChange,\n          handleSubmit,\n          isSubmitting,\n          touched,\n          values\n        }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            autoComplete: \"off\",\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              maxWidth: \"lg\",\n              className: classes.Container,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 3,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  lg: 7,\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    container: true,\n                    spacing: 2,\n                    children: [/*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      xs: 12,\n                      md: 6,\n                      children: /*#__PURE__*/_jsxDEV(TextField, {\n                        error: Boolean(touched.name && errors.name),\n                        fullWidth: true,\n                        helperText: touched.name && errors.name,\n                        label: \"Name on card *\",\n                        margin: \"normal\",\n                        name: \"name\",\n                        onBlur: handleBlur,\n                        onChange: handleChange,\n                        value: values.name,\n                        variant: \"outlined\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 234,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 229,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      xs: 12,\n                      md: 6,\n                      children: /*#__PURE__*/_jsxDEV(TextField, {\n                        error: Boolean(touched.date && errors.date),\n                        fullWidth: true,\n                        helperText: touched.date && errors.date,\n                        label: \"Expiry Date *\",\n                        type: \"month\",\n                        name: \"date\",\n                        variant: \"outlined\",\n                        margin: \"normal\",\n                        InputLabelProps: {\n                          shrink: true\n                        },\n                        onBlur: handleBlur,\n                        onChange: handleChange,\n                        value: values.date\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 253,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 248,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 227,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    container: true,\n                    spacing: 2,\n                    children: [/*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      xs: 12,\n                      md: 8,\n                      children: /*#__PURE__*/_jsxDEV(TextField, {\n                        error: Boolean(touched.cno && errors.cno),\n                        fullWidth: true,\n                        helperText: touched.cno && errors.cno,\n                        label: \"Card Number *\",\n                        margin: \"normal\",\n                        name: \"cno\",\n                        onBlur: handleBlur,\n                        onChange: handleChange,\n                        value: values.cno,\n                        variant: \"outlined\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 278,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 273,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      xs: 12,\n                      md: 4,\n                      children: /*#__PURE__*/_jsxDEV(TextField, {\n                        error: Boolean(touched.securityCode && errors.securityCode),\n                        fullWidth: true,\n                        helperText: touched.securityCode && errors.securityCode,\n                        label: \"Security Code/CVV   *\",\n                        margin: \"normal\",\n                        name: \"securityCode\",\n                        onBlur: handleBlur,\n                        onChange: handleChange,\n                        value: values.securityCode,\n                        variant: \"outlined\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 296,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 291,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 272,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  lg: 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  lg: 4,\n                  children: /*#__PURE__*/_jsxDEV(Card, {\n                    children: [/*#__PURE__*/_jsxDEV(CardContent, {\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        align: \"center\",\n                        color: \"textPrimary\",\n                        gutterBottom: true,\n                        variant: \"body 1\",\n                        children: [\"Subtotal: $ \", type]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 326,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        align: \"center\",\n                        color: \"textPrimary\",\n                        variant: \"body1\",\n                        children: [\"Tax (8.875%): $ \", tax.toFixed(2)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 334,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        align: \"center\",\n                        color: \"textPrimary\",\n                        variant: \"body1\",\n                        children: [\"Total: $\", total.toFixed(2)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 342,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 324,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 350,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Box, {\n                      p: 2,\n                      children: /*#__PURE__*/_jsxDEV(Grid, {\n                        Container: true,\n                        justify: \"flex-end\",\n                        children: /*#__PURE__*/_jsxDEV(Button, {\n                          color: \"primary\",\n                          fullWidth: true,\n                          size: \"small\",\n                          type: \"submit\",\n                          variant: \"contained\",\n                          children: \"Pay\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 356,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 352,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 351,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 323,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 17\n          }, this)\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: msg,\n        onClose: handleCloseMsg,\n        autoHideDuration: 3000,\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          onClose: handleCloseMsg,\n          severity: \"success\",\n          children: \"Payment is Successful\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AccountPayment, \"gTnxHKA1ccD4waxlf+M2jJttSXQ=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c2 = AccountPayment;\nAccountPayment.propTypes = {\n  auth: PropTypes.object.isRequired,\n  asyncPartnerTokenUpdate: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    auth: state.auth\n  };\n}\n\nexport default compose(connect(mapStateToProps, {\n  asyncPartnerTokenUpdate\n}, null))(AccountPayment);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Alert\");\n$RefreshReg$(_c2, \"AccountPayment\");","map":{"version":3,"sources":["C:/Users/Adam/Documents/PACE/Fall 2020 - Semester 4/CS 691 - Computer Science Project I/jobster-master/jobster-master/code/client/src/views/Partner/components/Account/AccountPayment.js"],"names":["React","makeStyles","CssBaseline","createMuiTheme","ThemeProvider","compose","connect","PropTypes","setCurrentPartner","asyncPartnerTokenUpdate","setAuthToken","jwt_decode","store","useHistory","Header","MuiAlert","axios","Grid","Card","CardContent","Container","Box","Snackbar","TextField","Divider","Button","Typography","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Formik","Yup","theme","palette","primary","main","background","default","useStyles","appMain","width","marginTop","minHeight","icon","height","justifyContent","Directions","marginLeft","marginRight","flexDirection","textAlign","display","Alert","props","AccountPayment","classes","open","setOpen","useState","msg","setMsg","type","location","state","plan","tax","parseInt","total","handleMsg","handleCloseMsg","event","reason","handleClickOpen","handleClose","pay","console","log","history","nav1","push","useEffect","localStorage","pt_jwtToken","decoded","dispatch","currentTime","Date","now","exp","replace","name","date","securityCode","cno","object","shape","string","max","required","matches","min","typeError","values","actions","id","auth","user","post","then","response","data","success","email","res","error","setTimeout","catch","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","Boolean","shrink","toFixed","propTypes","isRequired","func","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles, CssBaseline, createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { compose } from \"recompose\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { setCurrentPartner, asyncPartnerTokenUpdate } from 'actions/authActions';\nimport setAuthToken from \"../../../../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport store from \"../../../../store\";\nimport { useHistory } from 'react-router-dom';\nimport Header from '../Header';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport axios from 'axios';\nimport {\n  Grid,\n  Card,\n  CardContent,\n  Container,\n  Box,\n  Snackbar,\n  TextField,\n  Divider,\n  Button,\n  Typography,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle\n} from '@material-ui/core';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\n\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#2867B2\",\n    },\n    background: {\n      default: \"#f4f5fd\"\n    },\n  },\n})\n\nconst useStyles = makeStyles({\n  appMain: {\n    width: '100%',\n    marginTop: '100px',\n    minHeight: '100%',\n  },\n  icon: {\n    height: 100,\n    width: 100,\n    justifyContent: \"center\"\n  },\n  Container: {\n    marginTop: '50px',\n    Directions: 'row',\n    marginLeft: '10%',\n    marginRight: '10%',\n    flexDirection: \"row\",\n    textAlign: 'center'\n  },\n  appMain: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    marginTop: '75px'\n  }\n})\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nfunction AccountPayment(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [msg, setMsg] = React.useState(false);\n\n  let type = props.location.state.plan\n  let tax = ((8.875 / 100) * parseInt(type))\n  let total = parseInt(type) + tax\n\n  const handleMsg = () => {\n    setMsg(true);\n  };\n\n  const handleCloseMsg = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setMsg(false);\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const pay = () => {\n    console.log(\"Paying\")\n  }\n\n\n\n  const history = useHistory();\n  const nav1 = () => history.push('/jobinfo');\n\n  React.useEffect(() => {\n    // Check for token\n    if (localStorage.pt_jwtToken) {\n      // Set auth token header auth\n      console.log(\"in effect\", localStorage.pt_jwtToken);\n      setAuthToken(localStorage.pt_jwtToken);\n      // Decode token and get user info and exp\n      const decoded = jwt_decode(localStorage.pt_jwtToken);\n      console.log(\"in effect decoded\", decoded);\n      // Set user and isAuthenticated\n      store.dispatch(setCurrentPartner(decoded));\n\n      // Check for expired token\n      const currentTime = Date.now() / 1000;\n      if (decoded.exp < currentTime) {\n        //console.log(\"App.js is running inside if and if\")\n        // Logout user\n        //store.dispatch(logoutUser());\n        // TODO: Clear current Profile\n        console.log(\"Session Expired\")\n        // Redirect to login\n        // window.location.href = \"/login\";\n      }\n    }\n    else {\n      history.replace('/partner')\n    }\n  }, [localStorage.pt_jwtToken])\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div>\n        <Header />\n\n        <Box className={classes.appMain}>\n          <Container maxWidth=\"sm\">\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h4\"\n            >\n              You have Selected:  {type === '200' ? `Plan 1` : type === '600' ? `Plan 2` : `Plan 3`}\n            </Typography>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"body1\"\n            >\n              Continue To your payment.\n                </Typography>\n          </Container>\n        </Box>\n        <Formik\n          initialValues={{\n            name: '',\n            date: '',\n            securityCode: '',\n            cno: '',\n          }}\n          validationSchema={Yup.object().shape({\n            name: Yup.string().max(50).required(' Full name is required'),\n            date: Yup.string().max(10000).required(' Date is required'),\n            securityCode: Yup.string().matches(/^[0-9]+$/, \"Must be only numbers\").min(3, \"Invalid code\")\n              .max(4, \"Invalid code\").typeError(\"It should be a number\").required(' Security Code is required'),\n            cno: Yup.string().matches(/^[0-9]+$/, \"Must be only numbers\").min(16, \"Invalid card details\").max(16, \"Invalid card details\").required('Card Number is required'),\n          })}\n          onSubmit={(values, actions) => {\n            values.type = type;\n            values.id = props.auth.user.id;\n            //handleClickOpen(values);\n            console.log(\"values\", values)\n            axios.post('http://localhost:5000/api/payment', values).then(response => {\n              if (response.data.success) {\n                props.asyncPartnerTokenUpdate({ email: props.auth.user.email })\n                  .then(res => {\n                    console.log(\"response\", res);\n                    if (res.error) {\n                      console.log(\"error in updating token\", res.error)\n                    }\n                    else {\n                      handleMsg();\n                      setTimeout(() => {\n                        history.replace('/p-account')\n                      }, 3000)\n                      console.log(\"Updated the token\")\n                    }\n                  })\n              }\n            })\n              .catch(error => {\n                console.log(error);\n              })\n\n          }}\n\n        >\n          {({\n            errors,\n            handleBlur,\n            handleChange,\n            handleSubmit,\n            isSubmitting,\n            touched,\n            values\n          }) => (\n              <>\n                <form onSubmit={handleSubmit} autoComplete=\"off\">\n                  <Box maxWidth=\"lg\" className={classes.Container}>\n                    <Grid container spacing={3}>\n\n                      <Grid item lg={7}>\n\n                        <Grid\n                          container spacing={2}>\n                          <Grid\n                            item\n                            xs={12}\n                            md={6}\n                          >\n                            <TextField\n                              error={Boolean(touched.name && errors.name)}\n                              fullWidth\n                              helperText={touched.name && errors.name}\n                              label=\"Name on card *\"\n                              margin=\"normal\"\n                              name=\"name\"\n                              onBlur={handleBlur}\n                              onChange={handleChange}\n                              value={values.name}\n                              variant=\"outlined\"\n                            />\n                          </Grid>\n\n                          <Grid\n                            item\n                            xs={12}\n                            md={6}\n                          >\n                            <TextField\n                              error={Boolean(touched.date && errors.date)}\n                              fullWidth\n                              helperText={touched.date && errors.date}\n                              label=\"Expiry Date *\"\n                              type=\"month\"\n                              name=\"date\"\n                              variant=\"outlined\"\n                              margin=\"normal\"\n                              InputLabelProps={{\n                                shrink: true,\n                              }}\n                              onBlur={handleBlur}\n                              onChange={handleChange}\n                              value={values.date}\n                            />\n                          </Grid>\n                        </Grid>\n\n                        <Grid container spacing={2}>\n                          <Grid\n                            item\n                            xs={12}\n                            md={8}\n                          >\n                            <TextField\n                              error={Boolean(touched.cno && errors.cno)}\n                              fullWidth\n                              helperText={touched.cno && errors.cno}\n                              label=\"Card Number *\"\n                              margin=\"normal\"\n                              name=\"cno\"\n                              onBlur={handleBlur}\n                              onChange={handleChange}\n                              value={values.cno}\n                              variant=\"outlined\"\n                            />\n                          </Grid>\n                          <Grid\n                            item\n                            xs={12}\n                            md={4}\n                          >\n                            <TextField\n                              error={Boolean(touched.securityCode && errors.securityCode)}\n                              fullWidth\n                              helperText={touched.securityCode && errors.securityCode}\n                              label=\"Security Code/CVV   *\"\n                              margin=\"normal\"\n                              name=\"securityCode\"\n                              onBlur={handleBlur}\n                              onChange={handleChange}\n                              value={values.securityCode}\n                              variant=\"outlined\"\n                            />\n                          </Grid>\n                        </Grid>\n\n\n\n                        {/* <Grid item lg={2}>\n                </Grid> */}\n\n                      </Grid>\n\n                      <Grid item lg={1}>\n\n                      </Grid>\n\n                      <Grid item lg={4}>\n                        <Card>\n                          <CardContent>\n\n                            <Typography\n                              align=\"center\"\n                              color=\"textPrimary\"\n                              gutterBottom\n                              variant=\"body 1\"\n                            >\n                              Subtotal: $ {type}\n                            </Typography>\n                            <Typography\n                              align=\"center\"\n                              color=\"textPrimary\"\n                              variant=\"body1\"\n                            >\n                              Tax (8.875%): $ {tax.toFixed(2)}\n                            </Typography>\n\n                            <Typography\n                              align=\"center\"\n                              color=\"textPrimary\"\n                              variant=\"body1\"\n                            >\n                              Total: ${total.toFixed(2)}\n                            </Typography>\n                          </CardContent>\n                          <Divider />\n                          <Box p={2}>\n                            <Grid\n                              Container\n                              justify='flex-end'\n                            >\n                              <Button\n                                color='primary'\n                                fullWidth\n                                size=\"small\"\n                                type=\"submit\"\n                                variant=\"contained\"\n                              >\n                                Pay\n                          </Button>\n                            </Grid>\n                          </Box>\n                        </Card>\n                      </Grid>\n\n                    </Grid>\n                  </Box>\n                </form>\n              </>\n            )}\n        </Formik>\n        <Snackbar open={msg} onClose={handleCloseMsg} autoHideDuration={3000} >\n          <Alert onClose={handleCloseMsg} severity=\"success\">\n            Payment is Successful\n        </Alert>\n        </Snackbar>\n\n      </div>\n\n    </ThemeProvider>\n  );\n}\n\nAccountPayment.propTypes = {\n  auth: PropTypes.object.isRequired,\n  asyncPartnerTokenUpdate: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    auth: state.auth,\n  }\n}\n\nexport default compose(connect(mapStateToProps, { asyncPartnerTokenUpdate }, null))(AccountPayment);"]},"metadata":{},"sourceType":"module"}