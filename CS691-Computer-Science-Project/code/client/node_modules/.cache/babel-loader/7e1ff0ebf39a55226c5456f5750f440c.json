{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Adam\\\\Documents\\\\PACE\\\\Fall 2020 - Semester 4\\\\CS 691 - Computer Science Project I\\\\jobster-master\\\\jobster-master\\\\code\\\\client\\\\src\\\\views\\\\Partner\\\\components\\\\JobPostMgmt\\\\ViewPostedJobs.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles, CssBaseline, createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { compose } from \"recompose\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport { setCurrentPartner } from 'actions/authActions';\nimport setAuthToken from \"../../../../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport store from \"../../../../store\";\nimport { useHistory } from 'react-router-dom';\nimport Header from '../Header';\nimport { Grid, Card, CardContent, Box, Avatar, Divider, Button, Typography } from '@material-ui/core';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport ListAltIcon from '@material-ui/icons/ListAlt';\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#2867B2\"\n    },\n    background: {\n      default: \"#f4f5fd\"\n    }\n  }\n});\nconst useStyles = makeStyles({\n  appMain: {\n    width: '100%',\n    marginTop: '100px',\n    minHeight: '100%'\n  },\n  icon: {\n    height: 100,\n    width: 100,\n    justifyContent: \"center\"\n  },\n  Container: {\n    // backgroundColor: '#000000',\n    marginTop: '100px',\n    Directions: 'row',\n    marginLeft: '10%',\n    marginRight: '10%',\n    flexDirection: \"row\",\n    textAlign: 'center'\n  }\n});\n\nfunction ViewPostedJobs(props) {\n  _s();\n\n  const classes = useStyles();\n  const history = useHistory();\n  const [jobsData, setJobsData] = React.useState([]);\n  React.useEffect(() => {\n    // Check for token\n    if (localStorage.pt_jwtToken) {\n      // Set auth token header auth\n      console.log(\"in effect\", localStorage.pt_jwtToken);\n      setAuthToken(localStorage.pt_jwtToken); // Decode token and get user info and exp\n\n      const decoded = jwt_decode(localStorage.pt_jwtToken);\n      console.log(\"in effect decoded\", decoded); // Set user and isAuthenticated\n\n      store.dispatch(setCurrentPartner(decoded));\n      axios({\n        method: \"get\",\n        url: \"http://localhost:5000/api/jobs/\" + decoded.id\n      }).then(function (response) {\n        //handle success\n        console.log(response);\n        setJobsData(response.data.payload);\n      }).catch(function (error) {\n        //handle error\n        console.log(error);\n      }); // Check for expired token\n\n      const currentTime = Date.now() / 1000;\n\n      if (decoded.exp < currentTime) {\n        console.log(\"Session Expired\"); // Redirect to login\n        // window.location.href = \"/login\";\n      }\n    } else {\n      history.replace('/partner');\n    }\n  }, [localStorage.pt_jwtToken]);\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        maxWidth: \"sm\",\n        className: classes.Container,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => history.push('/jobpost'),\n          color: \"primary\",\n          fullWidth: true,\n          size: \"small\",\n          type: \"submit\",\n          variant: \"contained\",\n          children: \"+ Add New Job\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        maxWidth: \"lg\",\n        className: classes.Container,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: Object.keys(jobsData).map(index => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            lg: 4,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: [/*#__PURE__*/_jsxDEV(CardContent, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  align: \"center\",\n                  color: \"textPrimary\",\n                  gutterBottom: true,\n                  variant: \"h5\",\n                  children: jobsData[index].j_role\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  align: \"center\",\n                  color: \"textPrimary\",\n                  variant: \"body1\",\n                  children: jobsData[index].j_type\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  align: \"center\",\n                  color: \"textPrimary\",\n                  variant: \"body1\",\n                  children: [\"Job Posted: \", jobsData[index].j_posted_date]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  align: \"center\",\n                  color: \"textPrimary\",\n                  variant: \"body1\",\n                  children: [\"Job Deadline: \", jobsData[index].j_deadline]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                flexGrow: 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                p: 2,\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  Container: true,\n                  justify: \"flex-end\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    color: \"primary\",\n                    fullWidth: true,\n                    size: \"small\",\n                    type: \"submit\",\n                    variant: \"contained\",\n                    onClick: () => history.push('/jobinfo', jobsData[index]),\n                    children: \"Open\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 174,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ViewPostedJobs, \"YlKZBf1x8NNXyUatM9ZfwJW9cOs=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = ViewPostedJobs;\nViewPostedJobs.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    auth: state.auth\n  };\n}\n\nexport default compose(connect(mapStateToProps, {}, null))(ViewPostedJobs);\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewPostedJobs\");","map":{"version":3,"sources":["C:/Users/Adam/Documents/PACE/Fall 2020 - Semester 4/CS 691 - Computer Science Project I/jobster-master/jobster-master/code/client/src/views/Partner/components/JobPostMgmt/ViewPostedJobs.js"],"names":["React","makeStyles","CssBaseline","createMuiTheme","ThemeProvider","compose","connect","PropTypes","axios","setCurrentPartner","setAuthToken","jwt_decode","store","useHistory","Header","Grid","Card","CardContent","Box","Avatar","Divider","Button","Typography","DescriptionIcon","ListAltIcon","theme","palette","primary","main","background","default","useStyles","appMain","width","marginTop","minHeight","icon","height","justifyContent","Container","Directions","marginLeft","marginRight","flexDirection","textAlign","ViewPostedJobs","props","classes","history","jobsData","setJobsData","useState","useEffect","localStorage","pt_jwtToken","console","log","decoded","dispatch","method","url","id","then","response","data","payload","catch","error","currentTime","Date","now","exp","replace","push","Object","keys","map","index","j_role","j_type","j_posted_date","j_deadline","propTypes","auth","object","isRequired","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles, CssBaseline, createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { compose } from \"recompose\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport { setCurrentPartner } from 'actions/authActions';\nimport setAuthToken from \"../../../../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport store from \"../../../../store\";\nimport { useHistory } from 'react-router-dom';\nimport Header from '../Header';\nimport {\n  Grid,\n  Card,\n  CardContent,\n  Box,\n  Avatar,\n  Divider,\n  Button,\n  Typography\n} from '@material-ui/core';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport ListAltIcon from '@material-ui/icons/ListAlt';\n\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#2867B2\",\n    },\n    background: {\n      default: \"#f4f5fd\"\n    },\n  },\n})\n\n\nconst useStyles = makeStyles({\n  appMain: {\n    width: '100%',\n    marginTop: '100px',\n    minHeight: '100%',\n  },\n  icon: {\n    height: 100,\n    width: 100,\n    justifyContent: \"center\"\n  },\n  Container: {\n    // backgroundColor: '#000000',\n    marginTop: '100px',\n    Directions: 'row',\n    marginLeft: '10%',\n    marginRight: '10%',\n    flexDirection: \"row\",\n    textAlign: 'center'\n  }\n})\n\n\nfunction ViewPostedJobs(props) {\n  const classes = useStyles();\n\n\n  const history = useHistory();\n  const [jobsData, setJobsData] = React.useState([])\n\n\n\n  React.useEffect(() => {\n    // Check for token\n    if (localStorage.pt_jwtToken) {\n      // Set auth token header auth\n      console.log(\"in effect\", localStorage.pt_jwtToken);\n      setAuthToken(localStorage.pt_jwtToken);\n      // Decode token and get user info and exp\n      const decoded = jwt_decode(localStorage.pt_jwtToken);\n      console.log(\"in effect decoded\", decoded);\n      // Set user and isAuthenticated\n      store.dispatch(setCurrentPartner(decoded));\n\n\n      axios({\n        method: \"get\",\n        url: \"http://localhost:5000/api/jobs/\" + decoded.id,\n      })\n        .then(function (response) {\n          //handle success\n          console.log(response);\n          setJobsData(response.data.payload)\n\n        })\n        .catch(function (error) {\n          //handle error\n          console.log(error);\n        });\n\n      // Check for expired token\n      const currentTime = Date.now() / 1000;\n      if (decoded.exp < currentTime) {\n        console.log(\"Session Expired\")\n        // Redirect to login\n        // window.location.href = \"/login\";\n      }\n    }\n    else {\n      history.replace('/partner')\n    }\n  }, [localStorage.pt_jwtToken])\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div>\n        <Header />\n\n        <Box maxWidth=\"sm\" className={classes.Container}>\n          <Button onClick={() => history.push('/jobpost')}\n            color='primary'\n            fullWidth\n            size=\"small\"\n            type=\"submit\"\n            variant=\"contained\"\n          >\n            + Add New Job\n           </Button>\n        </Box>\n\n        <Box maxWidth=\"lg\" className={classes.Container}>\n          <Grid container spacing={3}>\n            {\n              Object.keys(jobsData).map(index => (\n                <Grid item lg={4}>\n                  <Card>\n                    <CardContent>\n\n                      <Typography\n                        align=\"center\"\n                        color=\"textPrimary\"\n                        gutterBottom\n                        variant=\"h5\"\n                      >\n                        {jobsData[index].j_role}\n                      </Typography>\n                      <Typography\n                        align=\"center\"\n                        color=\"textPrimary\"\n                        variant=\"body1\"\n                      >\n                        {jobsData[index].j_type}\n                      </Typography>\n                      <Typography\n                        align=\"center\"\n                        color=\"textPrimary\"\n                        variant=\"body1\"\n                      >\n                        Job Posted: {jobsData[index].j_posted_date}\n                      </Typography>\n                      <Typography\n                        align=\"center\"\n                        color=\"textPrimary\"\n                        variant=\"body1\"\n                      >\n                        Job Deadline: {jobsData[index].j_deadline}\n                      </Typography>\n                    </CardContent>\n                    <Box flexGrow={1} />\n                    <Divider />\n                    <Box p={2}>\n                      <Grid\n                        Container\n                        justify='flex-end'\n                      >\n                        <Button\n                          color='primary'\n                          fullWidth\n                          size=\"small\"\n                          type=\"submit\"\n                          variant=\"contained\"\n                          onClick={() => history.push('/jobinfo', jobsData[index])}\n                        >\n                          Open\n                          </Button>\n                      </Grid>\n                    </Box>\n                  </Card>\n                </Grid>\n\n              ))\n            }\n\n          </Grid>\n        </Box>\n\n      </div>\n    </ThemeProvider>\n  );\n}\n\nViewPostedJobs.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    auth: state.auth,\n  }\n}\n\nexport default compose(connect(mapStateToProps, {}, null))(ViewPostedJobs);"]},"metadata":{},"sourceType":"module"}