{"ast":null,"code":"const db = require('./lib/compiledCities.json');\n\nvar compCities = {\n  getAll: () => {\n    return db;\n  },\n  getCountriesShort: () => {\n    let res = [];\n\n    for (var key in db) {\n      res.push(key);\n    }\n\n    return res;\n  },\n  getCountryByShort: shortName => {\n    if (typeof db[shortName] !== 'undefined') {\n      return db[shortName];\n    } else {\n      return null;\n    }\n  },\n  getCountryInfoByShort: shortName => {\n    if (typeof db[shortName] !== 'undefined') {\n      let res = {};\n\n      for (var key in db[shortName]) {\n        if (key !== 'states') {\n          res[key] = db[shortName][key];\n        }\n      }\n\n      return res;\n    } else {\n      return null;\n    }\n  },\n  getStatesByShort: shortName => {\n    if (typeof db[shortName] !== 'undefined') {\n      let res = [];\n\n      if (typeof db[shortName].states !== 'undefined') {\n        res = Object.keys(db[shortName].states);\n        return res;\n      } else {\n        return null;\n      }\n    } else {\n      return null;\n    }\n  },\n  getCities: (shortName, state) => {\n    if (typeof db[shortName] !== 'undefined') {\n      if (typeof db[shortName].states != 'undefined') {\n        let res = [];\n\n        for (let idx in db[shortName].states[state]) {\n          res.push(db[shortName].states[state][idx].name);\n        }\n\n        return res;\n      } else {\n        return null;\n      }\n    } else {\n      return null;\n    }\n  },\n  getCountries: () => {\n    let res = [];\n\n    for (var shortName in db) {\n      let obj = {};\n\n      for (var key in db[shortName]) {\n        if (key !== 'states') {\n          obj.shortName = shortName;\n          obj[key] = db[shortName][key];\n        }\n      }\n\n      res.push(obj);\n    }\n\n    return res;\n  }\n};\nmodule.exports = compCities;","map":{"version":3,"sources":["C:/Users/Adam/Documents/PACE/Fall 2020 - Semester 4/CS 691 - Computer Science Project I/jobster-master/jobster-master/code/client/node_modules/countrycitystatejson/index.js"],"names":["db","require","compCities","getAll","getCountriesShort","res","key","push","getCountryByShort","shortName","getCountryInfoByShort","getStatesByShort","states","Object","keys","getCities","state","idx","name","getCountries","obj","module","exports"],"mappings":"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","sourcesContent":["const db = require('./lib/compiledCities.json')\n\nvar compCities = {\n\n  getAll: () => { return db },\n  getCountriesShort: () => {\n    let res = []\n    for (var key in db) {\n      res.push(key)\n    }\n    return res\n  },\n  getCountryByShort: (shortName) => {\n    if (typeof db[shortName] !== 'undefined') {\n      return db[shortName]\n    } else {\n      return null\n    }\n  },\n  getCountryInfoByShort: (shortName) => {\n    if (typeof db[shortName] !== 'undefined') {\n      let res = {}\n      for (var key in db[shortName]) {\n        if (key !== 'states') {\n          res[key] = db[shortName][key]\n        }\n      }\n      return res\n    } else {\n      return null\n    }\n  },\n  getStatesByShort: (shortName) => {\n    if (typeof db[shortName] !== 'undefined') {\n      let res = []\n      if (typeof db[shortName].states !== 'undefined') {\n        res = Object.keys(db[shortName].states)\n        return res\n      } else {\n        return null\n      }\n    } else {\n      return null\n    }\n  },\n  getCities: (shortName, state) => {\n    if (typeof db[shortName] !== 'undefined') {\n      if (typeof db[shortName].states != 'undefined') {\n        let res=[]\n        for (let idx in  db[shortName].states[state]) {\n          res.push(db[shortName].states[state][idx].name)\n        }\n        return res\n      } else {\n        return null\n      }\n    } else {\n      return null\n    }\n  },\n  getCountries: () => {\n    let res = []\n    for (var shortName in db) {\n      let obj = {}\n      for (var key in db[shortName]) {\n        if (key !== 'states') {\n          obj.shortName = shortName\n          obj[key] = db[shortName][key]\n        }\n      }\n      res.push(obj)\n    }\n    return res\n  }\n}\n\nmodule.exports = compCities\n"]},"metadata":{},"sourceType":"script"}