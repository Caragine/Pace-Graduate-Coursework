{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Adam\\\\Documents\\\\PACE\\\\Fall 2020 - Semester 4\\\\CS 691 - Computer Science Project I\\\\jobster-master\\\\jobster-master\\\\code\\\\client\\\\src\\\\views\\\\Partner\\\\components\\\\Profile\\\\ProfileForm.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles, CssBaseline, createMuiTheme, ThemeProvider } from '@material-ui/core';\nimport Header from '../Header';\nimport { Box, Container, Grid, Typography, Button, TextField } from '@material-ui/core';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport { compose } from \"recompose\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from 'react-router-dom';\nimport { asyncPartnerTokenUpdate } from \"../../../../actions/authActions\";\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#2867B2\"\n    },\n    background: {\n      default: \"#f4f5fd\"\n    }\n  }\n});\nconst useStyles = makeStyles({\n  appMain: {\n    width: '100%',\n    marginTop: '50px',\n    justifyContent: \"center\"\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  },\n  icon: {\n    height: 100,\n    width: 100,\n    justifyContent: \"center\"\n  },\n  card: {\n    justifyContent: \"center\"\n  }\n});\n\nfunction ProfileForm(props) {\n  _s();\n\n  const classes = useStyles();\n  const history = useHistory();\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        flexDirection: \"column\",\n        height: \"100%\",\n        justifyContent: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          maxWidth: \"sm\",\n          children: /*#__PURE__*/_jsxDEV(Formik, {\n            initialValues: {\n              imgLink: '',\n              name: '',\n              industry: '',\n              info: '',\n              headquater: '',\n              type: '',\n              revenue: '',\n              totalEmp: '',\n              websiteLink: '',\n              foundedYear: '',\n              specialties: ''\n            },\n            validationSchema: Yup.object().shape({\n              imgLink: Yup.string().matches(/((https?):\\/\\/)?(www.)?[a-z0-9]+(\\.[a-z]{2,}){1,3}(#?\\/?[a-zA-Z0-9#]+)*\\/?(\\?[a-zA-Z0-9-_]+=[a-zA-Z0-9-%]+&?)?$/, 'Enter correct url!').required('Logo Link is required'),\n              name: Yup.string().max(255).required('Company Name is required'),\n              industry: Yup.string().max(255).required('Company Industry is required'),\n              info: Yup.string().max(255).required('Company Info is required'),\n              headquater: Yup.string().max(255).required('Headquater Location is required'),\n              type: Yup.string().max(255).required('Company Type is required'),\n              revenue: Yup.string().max(255).required('Company Revenue is required'),\n              totalEmp: Yup.string().max(255).required('Company Total Number of Employees is required'),\n              websiteLink: Yup.string().matches(/((https?):\\/\\/)?(www.)?[a-z0-9]+(\\.[a-z]{2,}){1,3}(#?\\/?[a-zA-Z0-9#]+)*\\/?(\\?[a-zA-Z0-9-_]+=[a-zA-Z0-9-%]+&?)?$/, 'Enter correct url!').required('Website url is required'),\n              foundedYear: Yup.string().max(255).required('Company Foundation Year is required'),\n              specialties: Yup.string().max(255).required('Company Specialties is required')\n            }),\n            onSubmit: (values, actions) => {\n              values.p_ID = props.id;\n              console.log(\"props\", values);\n              axios.post('http://localhost:5000/api/create-p-profile', values).then(response => {\n                if (response.data.status) {\n                  props.asyncPartnerTokenUpdate(props.auth.user).then(res => {\n                    console.log(\"response\", res);\n\n                    if (res.error) {\n                      console.log(\"error in updating token\", res.error);\n                    } else {\n                      history.go(0);\n                    }\n                  });\n                }\n              }).catch(error => {\n                console.log(error);\n              });\n            },\n            children: ({\n              errors,\n              handleBlur,\n              handleChange,\n              handleSubmit,\n              handleReset,\n              isSubmitting,\n              touched,\n              values\n            }) => /*#__PURE__*/_jsxDEV(\"form\", {\n              id: \"postad_form\",\n              onSubmit: handleSubmit,\n              onReset: handleReset,\n              autoComplete: \"off\",\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                className: classes.appMain,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  color: \"textSecondary\",\n                  gutterBottom: true,\n                  variant: \"h5\",\n                  children: \"You haven't finished your profile!\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  color: \"textSecondary\",\n                  gutterBottom: true,\n                  variant: \"body2\",\n                  children: \"Setup the Partner company Information.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 2,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 6,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    error: Boolean(touched.name && errors.name),\n                    fullWidth: true,\n                    helperText: touched.name && errors.name,\n                    label: \"Company Name *\",\n                    margin: \"normal\",\n                    name: \"name\",\n                    onBlur: handleBlur,\n                    onChange: handleChange,\n                    value: values.name,\n                    variant: \"outlined\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 6,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    error: Boolean(touched.industry && errors.industry),\n                    fullWidth: true,\n                    helperText: touched.industry && errors.industry,\n                    label: \"Company Industry *\",\n                    margin: \"normal\",\n                    name: \"industry\",\n                    onBlur: handleBlur,\n                    onChange: handleChange,\n                    value: values.industry,\n                    variant: \"outlined\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 183,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true // spacing={1}\n                ,\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    error: Boolean(touched.imgLink && errors.imgLink),\n                    fullWidth: true,\n                    helperText: touched.imgLink && errors.imgLink,\n                    label: \"Company Logo Link *\",\n                    margin: \"normal\",\n                    name: \"imgLink\",\n                    onBlur: handleBlur,\n                    onChange: handleChange,\n                    value: values.imgLink,\n                    variant: \"outlined\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 206,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true // spacing={1}\n                ,\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    error: Boolean(touched.info && errors.info),\n                    fullWidth: true,\n                    multiline: true,\n                    rows: 4,\n                    helperText: touched.info && errors.info,\n                    label: \"Company Info*\",\n                    margin: \"normal\",\n                    name: \"info\",\n                    onBlur: handleBlur,\n                    onChange: handleChange,\n                    value: values.info,\n                    variant: \"outlined\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 229,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 2,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 6,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    error: Boolean(touched.headquater && errors.headquater),\n                    fullWidth: true,\n                    helperText: touched.headquater && errors.headquater,\n                    label: \"Headquater Location *\",\n                    margin: \"normal\",\n                    name: \"headquater\",\n                    onBlur: handleBlur,\n                    onChange: handleChange,\n                    value: values.headquater,\n                    variant: \"outlined\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 254,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 6,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    error: Boolean(touched.type && errors.type),\n                    fullWidth: true,\n                    helperText: touched.type && errors.type,\n                    label: \"Company Type *\",\n                    margin: \"normal\",\n                    name: \"type\",\n                    onBlur: handleBlur,\n                    onChange: handleChange,\n                    value: values.type,\n                    variant: \"outlined\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 271,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 2,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 6,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    error: Boolean(touched.revenue && errors.revenue),\n                    fullWidth: true,\n                    helperText: touched.revenue && errors.revenue,\n                    label: \"Company Revenue in $ *\",\n                    margin: \"normal\",\n                    name: \"revenue\",\n                    onBlur: handleBlur,\n                    onChange: handleChange,\n                    value: values.revenue,\n                    variant: \"outlined\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 294,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 6,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    error: Boolean(touched.totalEmp && errors.totalEmp),\n                    fullWidth: true,\n                    helperText: touched.totalEmp && errors.totalEmp,\n                    label: \"Total Employess *\",\n                    margin: \"normal\",\n                    name: \"totalEmp\",\n                    onBlur: handleBlur,\n                    onChange: handleChange,\n                    value: values.totalEmp,\n                    variant: \"outlined\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 311,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true // spacing={1}\n                ,\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    error: Boolean(touched.websiteLink && errors.websiteLink),\n                    fullWidth: true,\n                    helperText: touched.websiteLink && errors.websiteLink,\n                    label: \"Company Website Link *\",\n                    margin: \"normal\",\n                    name: \"websiteLink\",\n                    onBlur: handleBlur,\n                    onChange: handleChange,\n                    value: values.websiteLink,\n                    variant: \"outlined\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 334,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 330,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true // spacing={1}\n                ,\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    error: Boolean(touched.foundedYear && errors.foundedYear),\n                    fullWidth: true,\n                    helperText: touched.foundedYear && errors.foundedYear,\n                    label: \"Company Foundation Year*\",\n                    margin: \"normal\",\n                    name: \"foundedYear\",\n                    onBlur: handleBlur,\n                    onChange: handleChange,\n                    value: values.foundedYear,\n                    variant: \"outlined\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 357,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 353,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true // spacing={1}\n                ,\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    error: Boolean(touched.specialties && errors.specialties),\n                    fullWidth: true,\n                    helperText: touched.specialties && errors.specialties,\n                    label: \"Company Specialties *\",\n                    margin: \"normal\",\n                    name: \"specialties\",\n                    onBlur: handleBlur,\n                    onChange: handleChange,\n                    value: values.specialties,\n                    variant: \"outlined\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 380,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 376,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                my: 2,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  color: \"primary\" // disabled={isSubmitting}\n                  ,\n                  fullWidth: true,\n                  size: \"large\",\n                  type: \"submit\",\n                  variant: \"contained\",\n                  children: \"Upload\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 397,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProfileForm, \"cXZz/rbrhPrjL6gJaTc75NCtuak=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = ProfileForm;\nProfileForm.propTypes = {\n  className: PropTypes.string,\n  asyncPartnerTokenUpdate: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    auth: state.auth\n  };\n}\n\nexport default compose(connect(mapStateToProps, {\n  asyncPartnerTokenUpdate\n}, null))(ProfileForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileForm\");","map":{"version":3,"sources":["C:/Users/Adam/Documents/PACE/Fall 2020 - Semester 4/CS 691 - Computer Science Project I/jobster-master/jobster-master/code/client/src/views/Partner/components/Profile/ProfileForm.js"],"names":["React","makeStyles","CssBaseline","createMuiTheme","ThemeProvider","Header","Box","Container","Grid","Typography","Button","TextField","Formik","Yup","axios","PropTypes","compose","connect","useHistory","asyncPartnerTokenUpdate","theme","palette","primary","main","background","default","useStyles","appMain","width","marginTop","justifyContent","paper","padding","spacing","textAlign","color","text","secondary","icon","height","card","ProfileForm","props","classes","history","imgLink","name","industry","info","headquater","type","revenue","totalEmp","websiteLink","foundedYear","specialties","object","shape","string","matches","required","max","values","actions","p_ID","id","console","log","post","then","response","data","status","auth","user","res","error","go","catch","errors","handleBlur","handleChange","handleSubmit","handleReset","isSubmitting","touched","Boolean","propTypes","className","func","isRequired","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles, CssBaseline, createMuiTheme, ThemeProvider } from '@material-ui/core';\nimport Header from '../Header';\nimport {\n    Box,\n    Container,\n    Grid,\n    Typography,\n    Button,\n    TextField,\n} from '@material-ui/core';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport { compose } from \"recompose\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from 'react-router-dom';\nimport { asyncPartnerTokenUpdate } from \"../../../../actions/authActions\";\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: \"#2867B2\",\n        },\n        background: {\n            default: \"#f4f5fd\"\n        },\n    },\n})\n\nconst useStyles = makeStyles({\n    appMain: {\n        width: '100%',\n        marginTop: '50px',\n        justifyContent: \"center\"\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n    icon: {\n        height: 100,\n        width: 100,\n        justifyContent: \"center\"\n    },\n    card: {\n        justifyContent: \"center\"\n    }\n})\n\nfunction ProfileForm(props) {\n    const classes = useStyles();\n    const history = useHistory();\n\n    return (\n        <ThemeProvider theme={theme}>\n            <div>\n                <Box\n                    display=\"flex\"\n                    flexDirection=\"column\"\n                    height=\"100%\"\n                    justifyContent=\"center\"\n                >\n                    <Container maxWidth=\"sm\">\n                        <Formik\n                            initialValues={{\n                                imgLink: '',\n                                name: '',\n                                industry: '',\n                                info: '',\n                                headquater: '',\n                                type: '',\n                                revenue: '',\n                                totalEmp: '',\n                                websiteLink: '',\n                                foundedYear: '',\n                                specialties: '',\n                            }}\n                            validationSchema={Yup.object().shape({\n                                imgLink: Yup.string()\n                                    .matches(\n                                        /((https?):\\/\\/)?(www.)?[a-z0-9]+(\\.[a-z]{2,}){1,3}(#?\\/?[a-zA-Z0-9#]+)*\\/?(\\?[a-zA-Z0-9-_]+=[a-zA-Z0-9-%]+&?)?$/,\n                                        'Enter correct url!'\n                                    )\n                                    .required('Logo Link is required'),\n                                name: Yup.string().max(255).required('Company Name is required'),\n                                industry: Yup.string().max(255).required('Company Industry is required'),\n                                info: Yup.string().max(255).required('Company Info is required'),\n                                headquater: Yup.string().max(255).required('Headquater Location is required'),\n                                type: Yup.string().max(255).required('Company Type is required'),\n                                revenue: Yup.string().max(255).required('Company Revenue is required'),\n                                totalEmp: Yup.string().max(255).required('Company Total Number of Employees is required'),\n                                websiteLink: Yup.string()\n                                    .matches(\n                                        /((https?):\\/\\/)?(www.)?[a-z0-9]+(\\.[a-z]{2,}){1,3}(#?\\/?[a-zA-Z0-9#]+)*\\/?(\\?[a-zA-Z0-9-_]+=[a-zA-Z0-9-%]+&?)?$/,\n                                        'Enter correct url!'\n                                    )\n                                    .required('Website url is required'),\n                                foundedYear: Yup.string().max(255).required('Company Foundation Year is required'),\n                                specialties: Yup.string().max(255).required('Company Specialties is required'),\n                            })}\n\n                            onSubmit={(values, actions) => {\n                                values.p_ID = props.id\n                                console.log(\"props\", values)\n                                axios.post('http://localhost:5000/api/create-p-profile', values).then(response => {\n                                    if (response.data.status) {\n                                        props.asyncPartnerTokenUpdate(props.auth.user)\n                                            .then(res => {\n                                                console.log(\"response\", res);\n                                                if (res.error) {\n                                                    console.log(\"error in updating token\", res.error)\n                                                }\n                                                else {\n                                                    history.go(0)\n                                                }\n                                            })\n\n                                    }\n                                })\n                                    .catch(error => {\n                                        console.log(error);\n                                    })\n\n                            }}\n\n                        >\n                            {({\n                                errors,\n                                handleBlur,\n                                handleChange,\n                                handleSubmit,\n                                handleReset,\n                                isSubmitting,\n                                touched,\n                                values\n                            }) => (\n                                    <form id=\"postad_form\" onSubmit={handleSubmit} onReset={handleReset} autoComplete=\"off\">\n                                        <Box className={classes.appMain}>\n                                            <Typography\n                                                color=\"textSecondary\"\n                                                gutterBottom\n                                                variant=\"h5\"\n                                            >\n                                                You haven't finished your profile!\n                                            </Typography>\n                                            <Typography\n                                                color=\"textSecondary\"\n                                                gutterBottom\n                                                variant=\"body2\"\n                                            >\n                                                Setup the Partner company Information.\n                                            </Typography>\n                                        </Box>\n\n                                        <Grid\n                                            container\n                                            spacing={2}\n                                        >\n                                            <Grid\n                                                item\n                                                xs={6}\n                                            >\n                                                <TextField\n                                                    error={Boolean(touched.name && errors.name)}\n                                                    fullWidth\n                                                    helperText={touched.name && errors.name}\n                                                    label=\"Company Name *\"\n                                                    margin=\"normal\"\n                                                    name=\"name\"\n                                                    onBlur={handleBlur}\n                                                    onChange={handleChange}\n                                                    value={values.name}\n                                                    variant=\"outlined\"\n                                                />\n                                            </Grid>\n                                            <Grid\n                                                item\n                                                xs={6}\n                                            >\n                                                <TextField\n                                                    error={Boolean(touched.industry && errors.industry)}\n                                                    fullWidth\n                                                    helperText={touched.industry && errors.industry}\n                                                    label=\"Company Industry *\"\n                                                    margin=\"normal\"\n                                                    name=\"industry\"\n                                                    onBlur={handleBlur}\n                                                    onChange={handleChange}\n                                                    value={values.industry}\n                                                    variant=\"outlined\"\n                                                />\n                                            </Grid>\n                                        </Grid>\n\n                                        <Grid\n                                            container\n                                        // spacing={1}\n                                        >\n                                            <Grid\n                                                item\n                                                xs={12}\n                                            >\n                                                <TextField\n                                                    error={Boolean(touched.imgLink && errors.imgLink)}\n                                                    fullWidth\n                                                    helperText={touched.imgLink && errors.imgLink}\n                                                    label=\"Company Logo Link *\"\n                                                    margin=\"normal\"\n                                                    name=\"imgLink\"\n                                                    onBlur={handleBlur}\n                                                    onChange={handleChange}\n                                                    value={values.imgLink}\n                                                    variant=\"outlined\"\n                                                />\n                                            </Grid>\n                                        </Grid>\n\n                                        <Grid\n                                            container\n                                        // spacing={1}\n                                        >\n                                            <Grid\n                                                item\n                                                xs={12}\n                                            >\n                                                <TextField\n                                                    error={Boolean(touched.info && errors.info)}\n                                                    fullWidth\n                                                    multiline\n                                                    rows={4}\n                                                    helperText={touched.info && errors.info}\n                                                    label=\"Company Info*\"\n                                                    margin=\"normal\"\n                                                    name=\"info\"\n                                                    onBlur={handleBlur}\n                                                    onChange={handleChange}\n                                                    value={values.info}\n                                                    variant=\"outlined\"\n                                                />\n                                            </Grid>\n                                        </Grid>\n\n                                        <Grid\n                                            container\n                                            spacing={2}\n                                        >\n                                            <Grid\n                                                item\n                                                xs={6}\n                                            >\n                                                <TextField\n                                                    error={Boolean(touched.headquater && errors.headquater)}\n                                                    fullWidth\n                                                    helperText={touched.headquater && errors.headquater}\n                                                    label=\"Headquater Location *\"\n                                                    margin=\"normal\"\n                                                    name=\"headquater\"\n                                                    onBlur={handleBlur}\n                                                    onChange={handleChange}\n                                                    value={values.headquater}\n                                                    variant=\"outlined\"\n                                                />\n                                            </Grid>\n                                            <Grid\n                                                item\n                                                xs={6}\n                                            >\n                                                <TextField\n                                                    error={Boolean(touched.type && errors.type)}\n                                                    fullWidth\n                                                    helperText={touched.type && errors.type}\n                                                    label=\"Company Type *\"\n                                                    margin=\"normal\"\n                                                    name=\"type\"\n                                                    onBlur={handleBlur}\n                                                    onChange={handleChange}\n                                                    value={values.type}\n                                                    variant=\"outlined\"\n                                                />\n                                            </Grid>\n                                        </Grid>\n\n                                        <Grid\n                                            container\n                                            spacing={2}\n                                        >\n                                            <Grid\n                                                item\n                                                xs={6}\n                                            >\n                                                <TextField\n                                                    error={Boolean(touched.revenue && errors.revenue)}\n                                                    fullWidth\n                                                    helperText={touched.revenue && errors.revenue}\n                                                    label=\"Company Revenue in $ *\"\n                                                    margin=\"normal\"\n                                                    name=\"revenue\"\n                                                    onBlur={handleBlur}\n                                                    onChange={handleChange}\n                                                    value={values.revenue}\n                                                    variant=\"outlined\"\n                                                />\n                                            </Grid>\n                                            <Grid\n                                                item\n                                                xs={6}\n                                            >\n                                                <TextField\n                                                    error={Boolean(touched.totalEmp && errors.totalEmp)}\n                                                    fullWidth\n                                                    helperText={touched.totalEmp && errors.totalEmp}\n                                                    label=\"Total Employess *\"\n                                                    margin=\"normal\"\n                                                    name=\"totalEmp\"\n                                                    onBlur={handleBlur}\n                                                    onChange={handleChange}\n                                                    value={values.totalEmp}\n                                                    variant=\"outlined\"\n                                                />\n                                            </Grid>\n                                        </Grid>\n\n                                        <Grid\n                                            container\n                                        // spacing={1}\n                                        >\n                                            <Grid\n                                                item\n                                                xs={12}\n                                            >\n                                                <TextField\n                                                    error={Boolean(touched.websiteLink && errors.websiteLink)}\n                                                    fullWidth\n                                                    helperText={touched.websiteLink && errors.websiteLink}\n                                                    label=\"Company Website Link *\"\n                                                    margin=\"normal\"\n                                                    name=\"websiteLink\"\n                                                    onBlur={handleBlur}\n                                                    onChange={handleChange}\n                                                    value={values.websiteLink}\n                                                    variant=\"outlined\"\n                                                />\n                                            </Grid>\n                                        </Grid>\n\n                                        <Grid\n                                            container\n                                        // spacing={1}\n                                        >\n                                            <Grid\n                                                item\n                                                xs={12}\n                                            >\n                                                <TextField\n                                                    error={Boolean(touched.foundedYear && errors.foundedYear)}\n                                                    fullWidth\n                                                    helperText={touched.foundedYear && errors.foundedYear}\n                                                    label=\"Company Foundation Year*\"\n                                                    margin=\"normal\"\n                                                    name=\"foundedYear\"\n                                                    onBlur={handleBlur}\n                                                    onChange={handleChange}\n                                                    value={values.foundedYear}\n                                                    variant=\"outlined\"\n                                                />\n                                            </Grid>\n                                        </Grid>\n\n                                        <Grid\n                                            container\n                                        // spacing={1}\n                                        >\n                                            <Grid\n                                                item\n                                                xs={12}\n                                            >\n                                                <TextField\n                                                    error={Boolean(touched.specialties && errors.specialties)}\n                                                    fullWidth\n                                                    helperText={touched.specialties && errors.specialties}\n                                                    label=\"Company Specialties *\"\n                                                    margin=\"normal\"\n                                                    name=\"specialties\"\n                                                    onBlur={handleBlur}\n                                                    onChange={handleChange}\n                                                    value={values.specialties}\n                                                    variant=\"outlined\"\n                                                />\n                                            </Grid>\n                                        </Grid>\n\n\n                                        <Box my={2}>\n                                            <Button\n                                                color=\"primary\"\n                                                // disabled={isSubmitting}\n                                                fullWidth\n                                                size=\"large\"\n                                                type=\"submit\"\n                                                variant=\"contained\"\n                                            >\n                                                Upload\n                                            </Button>\n                                        </Box>\n                                    </form>\n                                )}\n                        </Formik>\n                    </Container>\n                </Box>\n            </div>\n            <CssBaseline />\n        </ThemeProvider>\n    );\n}\n\nProfileForm.propTypes = {\n    className: PropTypes.string,\n    asyncPartnerTokenUpdate: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n    return {\n        auth: state.auth,\n    }\n}\n\nexport default compose(connect(mapStateToProps, { asyncPartnerTokenUpdate }, null))(ProfileForm);\n\n"]},"metadata":{},"sourceType":"module"}