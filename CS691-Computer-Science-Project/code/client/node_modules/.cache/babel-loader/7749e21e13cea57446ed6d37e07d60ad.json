{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Adam\\\\Documents\\\\PACE\\\\Fall 2020 - Semester 4\\\\CS 691 - Computer Science Project I\\\\jobster-master\\\\jobster-master\\\\code\\\\client\\\\src\\\\views\\\\Partner\\\\components\\\\Account\\\\AccountInfo.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles, CssBaseline, createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { compose } from \"recompose\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { setCurrentPartner } from 'actions/authActions';\nimport setAuthToken from \"../../../../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport store from \"../../../../store\";\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport Header from '../Header';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { Grid, Card, CardContent, Container, TextField, CardHeader, Box, Avatar, Divider, Snackbar, Button, Typography, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#2867B2\"\n    },\n    background: {\n      default: \"#f4f5fd\"\n    } // closeButton: {\n    //   position: 'absolute',\n    //   right: theme.spacing(1),\n    //   top: theme.spacing(1),\n    //   color: theme.palette.grey[500],\n    // },\n\n  }\n});\nconst useStyles = makeStyles({\n  appMain: {\n    width: '100%',\n    marginTop: '100px',\n    minHeight: '100%'\n  },\n  icon: {\n    height: 100,\n    width: 100,\n    justifyContent: \"center\"\n  },\n  Container: {\n    // backgroundColor: '#000000',\n    marginTop: '50px',\n    Directions: 'row',\n    marginLeft: '10%',\n    marginRight: '10%',\n    flexDirection: \"row\",\n    textAlign: 'center'\n  },\n  appMain: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    marginTop: '75px',\n    textAlign: 'left'\n  },\n  typo: {\n    textAlign: 'center' // backgroundColor: '#2867B2',\n    // color: '#ffffff'\n\n  }\n});\n\nfunction Alert(props) {\n  return /*#__PURE__*/_jsxDEV(MuiAlert, {\n    elevation: 6,\n    variant: \"filled\",\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 12\n  }, this);\n}\n\n_c = Alert;\n\nfunction AccountInfo(props) {\n  _s();\n\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [msg, setMsg] = React.useState(false);\n  let purchased = new Date(parseInt(props.auth.user.acsubscribed));\n\n  const handleMsg = () => {\n    setMsg(true);\n  };\n\n  const handleCloseMsg = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setMsg(false);\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const history = useHistory();\n\n  const nav1 = () => history.push('/jobinfo');\n\n  React.useEffect(() => {\n    // Check for token\n    if (localStorage.pt_jwtToken) {\n      // Set auth token header auth\n      console.log(\"in effect\", localStorage.pt_jwtToken);\n      setAuthToken(localStorage.pt_jwtToken); // Decode token and get user info and exp\n\n      const decoded = jwt_decode(localStorage.pt_jwtToken);\n      console.log(\"in effect decoded\", decoded); // Set user and isAuthenticated\n\n      store.dispatch(setCurrentPartner(decoded)); // Check for expired token\n\n      const currentTime = Date.now() / 1000;\n\n      if (decoded.exp < currentTime) {\n        //console.log(\"App.js is running inside if and if\")\n        // Logout user\n        //store.dispatch(logoutUser());\n        // TODO: Clear current Profile\n        console.log(\"Session Expired\"); // Redirect to login\n        // window.location.href = \"/login\";\n      }\n\n      if (decoded.acstatus == 0) history.replace('/p-new-account');\n    } else {\n      history.replace('/partner');\n    }\n  }, [localStorage.pt_jwtToken]);\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: classes.appMain,\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          maxWidth: \"sm\",\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.typo,\n            color: \"textPrimary\",\n            variant: \"h4\",\n            children: [\"Hi \", `${props.auth.user.fname} ${props.auth.user.lname}!`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        maxWidth: \"lg\",\n        className: classes.Container,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            lg: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n                title: \"Your Account Summary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  disabled: true,\n                  fullWidth: true,\n                  label: \"Your email\",\n                  id: \"outlined-disabled\",\n                  value: props.auth.user.email,\n                  variant: \"outlined\",\n                  InputLabelProps: {\n                    shrink: true\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 17\n                }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(TextField, {\n                  disabled: true,\n                  fullWidth: true,\n                  label: \"Purchased Subscription date\",\n                  id: \"outlined-disabled\",\n                  value: purchased.toDateString(),\n                  variant: \"outlined\",\n                  InputLabelProps: {\n                    shrink: true\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  p: 2,\n                  children: /*#__PURE__*/_jsxDEV(Grid, {\n                    Container: true,\n                    justify: \"flex-end\",\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      color: \"primary\",\n                      fullWidth: true,\n                      size: \"large\" // type=\"submit\"\n                      ,\n                      variant: \"contained\",\n                      onClick: () => handleClickOpen(),\n                      children: \"Change Password\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 212,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            lg: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n                title: \"Your Active Subscription\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  align: \"center\",\n                  color: \"textPrimary\",\n                  gutterBottom: true,\n                  variant: \"h5\",\n                  children: props.auth.user.acplan === 200 ? `Plan 1` : props.auth.user.acplan === 600 ? `Plan 2` : `Plan 3`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  align: \"center\",\n                  color: \"textPrimary\",\n                  variant: \"body1\",\n                  children: props.auth.user.acplan === 200 ? `1 Month` : props.auth.user.acplan === 600 ? `6 Months` : `12 Months`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  align: \"center\",\n                  color: \"textPrimary\",\n                  variant: \"body1\",\n                  children: \"- Unlimited Job Posting\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  align: \"center\",\n                  color: \"textPrimary\",\n                  variant: \"body1\",\n                  children: \"- 24/7 support\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 23\n                }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(Box, {\n                  p: 2,\n                  children: /*#__PURE__*/_jsxDEV(Grid, {\n                    Container: true,\n                    justify: \"flex-end\",\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      color: \"primary\",\n                      fullWidth: true,\n                      size: \"large\",\n                      onClick: () => history.push('/p-ac-manage'),\n                      variant: \"contained\",\n                      children: \"Manage\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 271,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 267,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          current: '',\n          new: '',\n          newConfirm: ''\n        },\n        validationSchema: Yup.object().shape({\n          current: Yup.string().max(1000).required(' Current password is required'),\n          new: Yup.string().max(10000).required(' New password is required'),\n          newConfirm: Yup.string().oneOf([Yup.ref('new'), null], 'Passwords must match')\n        }),\n        onSubmit: (values, actions) => {\n          values.email = props.auth.user.email;\n          console.log(values);\n          axios({\n            method: \"post\",\n            url: \"http://localhost:5000/api/p-pass-change\",\n            data: values\n          }).then(function (response) {\n            //handle success\n            console.log(response);\n\n            if (response.data.success) {\n              console.log(\"Updated password\");\n              handleClose();\n              handleMsg();\n              actions.resetForm();\n            }\n          }).catch(function (error) {\n            //handle error\n            console.log(error.response.data);\n            actions.setErrors(error.response.data);\n          });\n        },\n        children: ({\n          errors,\n          handleBlur,\n          handleChange,\n          handleSubmit,\n          isSubmitting,\n          touched,\n          values\n        }) => /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          autoComplete: \"off\",\n          children: /*#__PURE__*/_jsxDEV(Dialog, {\n            open: open,\n            onClose: handleClose,\n            \"aria-labelledby\": \"alert-dialog-title\",\n            \"aria-describedby\": \"alert-dialog-description\",\n            children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n              id: \"alert-dialog-title\",\n              children: \"Change Password?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n              children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n                id: \"alert-dialog-description\",\n                children: [\"Enter details to change password.\", /*#__PURE__*/_jsxDEV(TextField, {\n                  error: Boolean(touched.current && errors.current),\n                  fullWidth: true,\n                  helperText: touched.current && errors.current,\n                  label: \"Current Password *\",\n                  type: \"password\",\n                  margin: \"normal\",\n                  name: \"current\",\n                  onBlur: handleBlur,\n                  onChange: handleChange,\n                  value: values.current,\n                  variant: \"outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 353,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  error: Boolean(touched.new && errors.new),\n                  fullWidth: true,\n                  helperText: touched.new && errors.new,\n                  label: \"New Password *\",\n                  margin: \"normal\",\n                  type: \"password\",\n                  name: \"new\",\n                  onBlur: handleBlur,\n                  onChange: handleChange,\n                  value: values.new,\n                  variant: \"outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 366,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  error: Boolean(touched.newConfirm && errors.newConfirm),\n                  fullWidth: true,\n                  helperText: touched.newConfirm && errors.newConfirm,\n                  label: \"Confirm New Password *\",\n                  type: \"password\",\n                  margin: \"normal\",\n                  name: \"newConfirm\",\n                  onBlur: handleBlur,\n                  onChange: handleChange,\n                  value: values.newConfirm,\n                  variant: \"outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 379,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: handleClose,\n                color: \"primary\",\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(Button // onClick={() => history.push('')}  \n              , {\n                color: \"primary\",\n                variant: \"contained\",\n                onClick: handleSubmit,\n                autoFocus: true,\n                children: \"Proceed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: msg,\n        onClose: handleCloseMsg,\n        autoHideDuration: 3000,\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          onClose: handleCloseMsg,\n          severity: \"success\",\n          children: \"Password Changed Successfully!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AccountInfo, \"gTnxHKA1ccD4waxlf+M2jJttSXQ=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c2 = AccountInfo;\nAccountInfo.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    auth: state.auth\n  };\n}\n\nexport default compose(connect(mapStateToProps, {}, null))(AccountInfo);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Alert\");\n$RefreshReg$(_c2, \"AccountInfo\");","map":{"version":3,"sources":["C:/Users/Adam/Documents/PACE/Fall 2020 - Semester 4/CS 691 - Computer Science Project I/jobster-master/jobster-master/code/client/src/views/Partner/components/Account/AccountInfo.js"],"names":["React","makeStyles","CssBaseline","createMuiTheme","ThemeProvider","compose","connect","PropTypes","setCurrentPartner","setAuthToken","jwt_decode","store","useHistory","axios","Header","MuiAlert","Grid","Card","CardContent","Container","TextField","CardHeader","Box","Avatar","Divider","Snackbar","Button","Typography","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Formik","Yup","theme","palette","primary","main","background","default","useStyles","appMain","width","marginTop","minHeight","icon","height","justifyContent","Directions","marginLeft","marginRight","flexDirection","textAlign","display","typo","Alert","props","AccountInfo","classes","open","setOpen","useState","msg","setMsg","purchased","Date","parseInt","auth","user","acsubscribed","handleMsg","handleCloseMsg","event","reason","handleClickOpen","handleClose","history","nav1","push","useEffect","localStorage","pt_jwtToken","console","log","decoded","dispatch","currentTime","now","exp","acstatus","replace","fname","lname","email","shrink","toDateString","acplan","current","new","newConfirm","object","shape","string","max","required","oneOf","ref","values","actions","method","url","data","then","response","success","resetForm","catch","error","setErrors","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","Boolean","propTypes","isRequired","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles, CssBaseline, createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { compose } from \"recompose\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { setCurrentPartner } from 'actions/authActions';\nimport setAuthToken from \"../../../../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport store from \"../../../../store\";\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport Header from '../Header';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport {\n  Grid,\n  Card,\n  CardContent,\n  Container,\n  TextField,\n  CardHeader,\n  Box,\n  Avatar,\n  Divider,\n  Snackbar,\n  Button,\n  Typography,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle\n} from '@material-ui/core';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nconst theme = createMuiTheme({\n    palette: {\n      primary: {\n        main: \"#2867B2\",\n      },\n      background: {\n        default: \"#f4f5fd\"\n      },\n      // closeButton: {\n      //   position: 'absolute',\n      //   right: theme.spacing(1),\n      //   top: theme.spacing(1),\n      //   color: theme.palette.grey[500],\n      // },\n    },\n  })\n\n\n  const useStyles = makeStyles({\n    appMain: {\n      width: '100%',\n      marginTop: '100px',\n      minHeight: '100%',\n    },\n    icon: {\n      height: 100,\n      width: 100,\n      justifyContent: \"center\"\n    },\n    Container: {\n      // backgroundColor: '#000000',\n      marginTop: '50px',\n      Directions: 'row',\n      marginLeft: '10%',\n      marginRight: '10%',\n      flexDirection: \"row\",\n      textAlign: 'center'\n    },\n    appMain:{\n        display:\"flex\",\n        flexDirection:\"row\",\n        justifyContent: \"center\",\n        marginTop: '75px',\n        textAlign: 'left'\n    },\n    typo:{\n        textAlign: 'center',\n        // backgroundColor: '#2867B2',\n        // color: '#ffffff'\n    }\n  })\n\n  function Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n  }\n  \n\nfunction AccountInfo(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const [msg, setMsg] = React.useState(false);\n\n    let purchased = new Date(parseInt(props.auth.user.acsubscribed))\n\n\n    const handleMsg = () => {\n      setMsg(true);\n    };\n\n    const handleCloseMsg = (event, reason) => {\n      if (reason === 'clickaway') {\n        return;\n      }\n  \n      setMsg(false);\n    };\n\n    const handleClickOpen = () => {\n      setOpen(true);\n    };\n  \n    const handleClose = () => {\n      setOpen(false);\n    };\n\n\n    const history = useHistory();\n    const nav1 = () => history.push('/jobinfo');\n\n    React.useEffect(() => {\n        // Check for token\n        if (localStorage.pt_jwtToken) {\n            // Set auth token header auth\n            console.log(\"in effect\", localStorage.pt_jwtToken);\n            setAuthToken(localStorage.pt_jwtToken);\n            // Decode token and get user info and exp\n            const decoded = jwt_decode(localStorage.pt_jwtToken);\n            console.log(\"in effect decoded\", decoded);\n            // Set user and isAuthenticated\n            store.dispatch(setCurrentPartner(decoded));\n\n            // Check for expired token\n            const currentTime = Date.now() / 1000;\n            if (decoded.exp < currentTime) {\n                //console.log(\"App.js is running inside if and if\")\n                // Logout user\n                //store.dispatch(logoutUser());\n                // TODO: Clear current Profile\n                console.log(\"Session Expired\")\n                // Redirect to login\n                // window.location.href = \"/login\";\n            }\n\n            if(decoded.acstatus==0) history.replace('/p-new-account') \n        }\n        else {\n            history.replace('/partner')\n        }\n    }, [localStorage.pt_jwtToken])\n\n    return (\n        <ThemeProvider theme={theme}>\n            <div>\n        <Header />\n        \n        <Box className={classes.appMain}>\n        <Container maxWidth=\"sm\">\n                <Typography\n                className={classes.typo}\n                color=\"textPrimary\"\n                variant=\"h4\"\n                >\n                    Hi {`${props.auth.user.fname} ${props.auth.user.lname}!`}\n                </Typography>\n           </Container>\n           </Box>\n\n           <Box maxWidth=\"lg\" className={classes.Container}>\n            <Grid container spacing={3}> \n\n            <Grid item lg={6}>\n              <Card>\n              <CardHeader\n                title=\"Your Account Summary\"\n              />\n              <Divider />\n              <CardContent>\n                <TextField\n                  disabled\n                  fullWidth\n                  label=\"Your email\"\n                  id=\"outlined-disabled\"\n                  value={props.auth.user.email}\n                  variant=\"outlined\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                />\n                &nbsp;\n                <TextField\n                  disabled\n                  fullWidth\n                  label=\"Purchased Subscription date\"\n                  id=\"outlined-disabled\"\n                  value= {purchased.toDateString()}\n                  variant=\"outlined\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                />\n                <Divider />\n                <Box p={2}>\n                      <Grid\n                        Container\n                        justify='flex-end'\n                      >\n                        <Button\n                          color='primary'\n                          fullWidth\n                          size=\"large\"\n                          // type=\"submit\"\n                          variant=\"contained\"\n                          onClick={() => handleClickOpen()}\n                        >\n                          Change Password\n                          </Button>\n                      </Grid>\n                    </Box>\n              </CardContent>\n              </Card>\n            </Grid>\n\n            <Grid item lg={6}>\n              <Card>\n              <CardHeader\n                title=\"Your Active Subscription\"\n              />\n              <Divider />\n              <CardContent>\n              <Typography\n                        align=\"center\"\n                        color=\"textPrimary\"\n                        gutterBottom\n                        variant=\"h5\"\n                      >\n                        {props.auth.user.acplan === 200 ? `Plan 1` : props.auth.user.acplan === 600 ? `Plan 2` : `Plan 3`}\n                      </Typography>\n                      <Typography\n                        align=\"center\"\n                        color=\"textPrimary\"\n                        variant=\"body1\"\n                      >\n                        {props.auth.user.acplan === 200 ? `1 Month` : props.auth.user.acplan === 600 ? `6 Months` : `12 Months`}\n                      </Typography>\n                      <Typography\n                        align=\"center\"\n                        color=\"textPrimary\"\n                        variant=\"body1\"\n                      >\n                        - Unlimited Job Posting\n                      </Typography>\n                      <Typography\n                        align=\"center\"\n                        color=\"textPrimary\"\n                        variant=\"body1\"\n                      >\n                        - 24/7 support\n                      </Typography>\n                      &nbsp;\n                {/* <Divider /> */}\n                <Box p={2}>\n                      <Grid\n                        Container\n                        justify='flex-end'\n                      >\n                        <Button\n                          color='primary'\n                          fullWidth\n                          size=\"large\"\n                          onClick={()=>history.push('/p-ac-manage')}\n                          variant=\"contained\"\n                        >\n                          Manage\n                          </Button>\n                      </Grid>\n                    </Box>\n              </CardContent>\n              </Card>\n            </Grid>\n\n            </Grid>\n            </Box>\n            \n            <Formik\n                    initialValues={{\n                    current: '',\n                    new: '',\n                    newConfirm: '',\n                    }}\n                    validationSchema={Yup.object().shape({\n                    current: Yup.string().max(1000).required(' Current password is required'),\n                    new: Yup.string().max(10000).required(' New password is required'),\n                    newConfirm:    Yup.string()\n                    .oneOf([Yup.ref('new'), null], 'Passwords must match'), \n                    })}\n                    onSubmit={(values,actions) => {\n                      values.email = props.auth.user.email\n                      console.log(values)\n                      \n                      axios({\n                        method: \"post\",\n                        url: \"http://localhost:5000/api/p-pass-change\",\n                        data: values,\n                      })\n                        .then(function (response) {\n                          //handle success\n                          console.log(response);\n                          if (response.data.success) {\n                            console.log(\"Updated password\")\n                            handleClose()\n                            handleMsg()\n                            actions.resetForm();\n                          }\n              \n                        })\n                        .catch(function (error) {\n                          //handle error\n                          console.log(error.response.data);\n                          actions.setErrors(error.response.data)\n                        });\n                    }}\n\n              >\n            {({\n              errors,\n              handleBlur,\n              handleChange,\n              handleSubmit,\n              isSubmitting,\n              touched,\n              values\n            }) => (\n              <form onSubmit={handleSubmit} autoComplete=\"off\">\n\n            <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        \n        <DialogTitle id=\"alert-dialog-title\">{\"Change Password?\"}</DialogTitle>\n        <DialogContent>\n\n          <DialogContentText id=\"alert-dialog-description\">\n            Enter details to change password.\n            \n                <TextField\n                        error={Boolean(touched.current && errors.current)}\n                        fullWidth\n                        helperText={touched.current && errors.current}\n                        label=\"Current Password *\"\n                        type=\"password\"\n                        margin=\"normal\"\n                        name=\"current\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.current}\n                        variant=\"outlined\"\n                      />\n                <TextField\n                        error={Boolean(touched.new && errors.new)}\n                        fullWidth\n                        helperText={touched.new && errors.new}\n                        label=\"New Password *\"\n                        margin=\"normal\"\n                        type=\"password\"\n                        name=\"new\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.new}\n                        variant=\"outlined\"\n                      />\n                      <TextField\n                        error={Boolean(touched.newConfirm && errors.newConfirm)}\n                        fullWidth\n                        helperText={touched.newConfirm && errors.newConfirm}\n                        label=\"Confirm New Password *\"\n                        type=\"password\"\n                        margin=\"normal\"\n                        name=\"newConfirm\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.newConfirm}\n                        variant=\"outlined\"\n                      />\n                      \n                \n          </DialogContentText>\n \n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button\n          // onClick={() => history.push('')}  \n           color=\"primary\" variant=\"contained\" onClick={handleSubmit} autoFocus>\n            Proceed\n          </Button>\n          \n        </DialogActions>\n        \n      </Dialog>\n      </form>\n            )}\n              \n</Formik>  \n<Snackbar open={msg} onClose={handleCloseMsg} autoHideDuration={3000} >\n        <Alert onClose={handleCloseMsg} severity=\"success\">\n          Password Changed Successfully!\n        </Alert>\n      </Snackbar>\n  \n\n          </div>\n        </ThemeProvider>\n    );\n}\n\nAccountInfo.propTypes = {\n    auth: PropTypes.object.isRequired\n};\n\nfunction mapStateToProps(state) {\n    return {\n        auth: state.auth,\n    }\n}\n\nexport default compose(connect(mapStateToProps, {}, null))(AccountInfo);\n"]},"metadata":{},"sourceType":"module"}