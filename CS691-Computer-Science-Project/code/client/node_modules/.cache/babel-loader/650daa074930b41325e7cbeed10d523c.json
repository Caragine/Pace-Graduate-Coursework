{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Adam\\\\Documents\\\\PACE\\\\Fall 2020 - Semester 4\\\\CS 691 - Computer Science Project I\\\\jobster-master\\\\jobster-master\\\\code\\\\client\\\\src\\\\views\\\\Home\\\\components\\\\Profile\\\\Resume.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from \"recompose\";\nimport { connect } from \"react-redux\";\nimport { Button, Card, CardContent, CardHeader, Divider, IconButton, makeStyles } from '@material-ui/core';\nimport { Formik } from 'formik';\nimport axios from \"axios\";\nimport SaveIcon from '@material-ui/icons/Save';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport { useHistory } from 'react-router-dom';\nconst useStyles = makeStyles(theme => ({\n  input: {\n    display: 'none'\n  }\n}));\n\nconst Resume = (props, {\n  className,\n  ...rest\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const id = props.auth.user.id;\n  const history = useHistory();\n  console.log(\"Resume\", props);\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    enableReinitialize: true,\n    initialValues: {\n      u_ID: id,\n      u_resume: null\n    },\n    onSubmit: (values, actions) => {\n      console.log(\"props\", values);\n      const {\n        u_ID,\n        u_resume\n      } = values;\n      var formData = new FormData();\n      formData.append(\"u_ID\", u_ID);\n      formData.append(\"u_resume\", u_resume);\n\n      for (var key of formData.entries()) {\n        console.log(key[0] + ', ' + key[1]);\n      }\n\n      axios({\n        method: \"post\",\n        url: \"http://localhost:5000/api/update-resume\",\n        data: formData,\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }).then(function (response) {\n        //handle success\n        console.log(response);\n\n        if (response.data.success) {\n          history.go(0);\n        }\n      }).catch(function (error) {\n        //handle error\n        console.log(error);\n      });\n    },\n    children: ({\n      values,\n      errors,\n      touched,\n      handleChange,\n      handleBlur,\n      handleSubmit,\n      setFieldValue,\n      isSubmitting\n      /* and other goodies */\n\n    }) => /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      onSubmit: handleSubmit,\n      noValidate: true,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: classes.root,\n        ...rest,\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          title: \"Resume\",\n          action: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: props.u_resume === undefined ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: values.u_resume === null ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  name: \"u_resume\",\n                  accept: \".pdf\",\n                  className: classes.input,\n                  id: \"u_resume\",\n                  type: \"file\",\n                  onChange: event => {\n                    console.log(\"event\", event.currentTarget.files[0]);\n                    setFieldValue(\"u_resume\", event.currentTarget.files[0]); //setFieldValue(\"u_resume\", event.currentTarget.files[0]);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"u_resume\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    color: \"default\",\n                    className: classes.button,\n                    component: \"span\",\n                    startIcon: /*#__PURE__*/_jsxDEV(CloudUploadIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 125,\n                      columnNumber: 40\n                    }, this),\n                    children: \"Upload\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 120,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(IconButton, {\n                type: \"submit\",\n                \"aria-label\": \"edit\",\n                children: /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 25\n              }, this)\n            }, void 0, false)\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: props.u_resume === undefined ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No resume uploaded!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 21\n            }, this)\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(\"embed\", {\n            src: props.u_resume,\n            width: \"100%\",\n            height: \"375\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Resume, \"cXZz/rbrhPrjL6gJaTc75NCtuak=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = Resume;\nResume.propTypes = {\n  className: PropTypes.string\n};\n\nfunction mapStateToProps(state) {\n  return {\n    auth: state.auth\n  };\n}\n\nexport default compose(connect(mapStateToProps, {}, null))(Resume);\n\nvar _c;\n\n$RefreshReg$(_c, \"Resume\");","map":{"version":3,"sources":["C:/Users/Adam/Documents/PACE/Fall 2020 - Semester 4/CS 691 - Computer Science Project I/jobster-master/jobster-master/code/client/src/views/Home/components/Profile/Resume.js"],"names":["React","PropTypes","compose","connect","Button","Card","CardContent","CardHeader","Divider","IconButton","makeStyles","Formik","axios","SaveIcon","CloudUploadIcon","useHistory","useStyles","theme","input","display","Resume","props","className","rest","classes","id","auth","user","history","console","log","u_ID","u_resume","values","actions","formData","FormData","append","key","entries","method","url","data","headers","then","response","success","go","catch","error","errors","touched","handleChange","handleBlur","handleSubmit","setFieldValue","isSubmitting","form","root","undefined","event","currentTarget","files","button","propTypes","string","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from \"recompose\";\nimport { connect } from \"react-redux\";\n\nimport {\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  makeStyles\n} from '@material-ui/core';\nimport { Formik } from 'formik';\nimport axios from \"axios\";\nimport SaveIcon from '@material-ui/icons/Save';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport { useHistory } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n\n  input: {\n    display: 'none'\n  }\n\n}));\n\nconst Resume = (props, { className, ...rest }) => {\n  const classes = useStyles();\n  const id = props.auth.user.id;\n  const history = useHistory();\n\n  console.log(\"Resume\", props)\n\n\n  return (\n    <Formik\n      enableReinitialize\n      initialValues={{\n        u_ID: id,\n        u_resume: null\n      }}\n      onSubmit={(values, actions) => {\n        console.log(\"props\", values)\n        const {\n          u_ID,\n          u_resume\n        } = values;\n\n        var formData = new FormData();\n        formData.append(\"u_ID\", u_ID);\n        formData.append(\"u_resume\", u_resume);\n        for (var key of formData.entries()) {\n          console.log(key[0] + ', ' + key[1]);\n        }\n        axios({\n          method: \"post\",\n          url: \"http://localhost:5000/api/update-resume\",\n          data: formData,\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        })\n          .then(function (response) {\n            //handle success\n            console.log(response);\n            if (response.data.success) {\n              history.go(0)\n            }\n          })\n          .catch(function (error) {\n            //handle error\n            console.log(error);\n          });\n      }}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        setFieldValue,\n        isSubmitting,\n        /* and other goodies */\n      }) => (\n          <form className={classes.form} onSubmit={handleSubmit} noValidate>\n            <Card\n              className={classes.root}\n              {...rest}\n            >\n              <CardHeader\n                title=\"Resume\"\n                action={\n                  <>\n\n                    {props.u_resume === undefined\n                      ?\n                      <>\n\n                      </>\n                      :\n\n\n\n                      <>{values.u_resume === null ? <>\n                        <input\n                          name=\"u_resume\"\n                          accept=\".pdf\"\n                          className={classes.input}\n                          id=\"u_resume\"\n                          type=\"file\"\n                          onChange={(event) => {\n                            console.log(\"event\", event.currentTarget.files[0])\n                            setFieldValue(\"u_resume\", event.currentTarget.files[0]);\n                            //setFieldValue(\"u_resume\", event.currentTarget.files[0]);\n                          }}\n                        />\n                        <label htmlFor=\"u_resume\">\n                          <Button\n                            variant=\"contained\"\n                            color=\"default\"\n                            className={classes.button}\n                            component=\"span\"\n                            startIcon={<CloudUploadIcon />}\n                          >\n                            Upload\n                          </Button>\n                        </label>\n                      </> :\n                        <IconButton type=\"submit\" aria-label=\"edit\">\n                          <SaveIcon />\n                        </IconButton>}\n\n                      </>\n\n                    }\n                  </>\n                }\n              />\n              <Divider />\n              <CardContent>\n                {props.u_resume === undefined\n                  ?\n                  <>\n                    <p>No resume uploaded!</p>\n                  </>\n\n                  :\n                  <embed src={props.u_resume} width=\"100%\" height=\"375\"></embed>\n                }\n\n              </CardContent>\n              <Divider />\n            </Card>\n          </form>\n        )\n      }\n    </Formik >\n  );\n};\n\nResume.propTypes = {\n  className: PropTypes.string\n};\n\n\nfunction mapStateToProps(state) {\n  return {\n    auth: state.auth,\n  }\n}\n\nexport default compose(connect(mapStateToProps, {}, null))(Resume);\n"]},"metadata":{},"sourceType":"module"}